{"ast":null,"code":"var _jsxFileName = \"/home/pinchas/code/projects/movie-finder/src/components/carousel/carousel.component.jsx\";\nimport React from \"react\";\nimport { TrailerContainer } from \"./Carousel.styles\";\nimport YouTube from \"react-youtube\";\nimport \"./carousel.styles.css\";\nimport { connect } from \"react-redux\";\nimport Slider from \"react-slick\";\nimport MovieSlider from \"../movieSLider/MovieSlider.component\";\nimport MovieCastCarousel from \"../MovieCastCarousel/MovieCastCarousel.component\";\nimport ReviewsCarousel from \"../ReviewsCarousel/ReviewsCarousel.component\";\nimport { CarouselStyling } from \"./Carousel.styles\";\nimport useWidth from \"../../hooks/useWidth.hooks\";\n\nconst Carousel = ({\n  type,\n  trailers,\n  movies,\n  reviews,\n  movieCast,\n  slidesToShow,\n  slidesToScroll,\n  autoplay,\n  fade,\n  color,\n  activeDotColor,\n  dotColor\n}) => {\n  const width = useWidth().width;\n  const optsYouTube = {\n    height: \"390\",\n    width: \"640\",\n    playerVars: {\n      autoplay: 0\n    }\n  };\n  const settings = {\n    dots: true,\n    infinite: true,\n    slidesToShow: slidesToShow,\n    slidesToScroll: slidesToScroll,\n    autoplay: autoplay,\n    autoplaySpeed: 4000,\n    fade: fade,\n    pauseOnHover: true,\n    lazyLoad: true\n  };\n\n  const category = () => {\n    switch (type) {\n      case \"trailers\":\n        return trailers && trailers.map(trailer => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: trailer.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(TrailerContainer, {\n            width: width,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(YouTube, {\n            videoId: trailer.key,\n            opts: optsYouTube // onReady={_onReadyYouTube}\n            ,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }\n          })));\n        });\n\n      case \"movieSlider\":\n        return movies && movies.map(movie => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: movie.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(MovieSlider, {\n            movie: movie,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }\n          }));\n        });\n\n      case \"movieCast\":\n        return movieCast && movieCast.map(cast => {\n          return /*#__PURE__*/React.createElement(MovieCastCarousel, {\n            name: cast.name,\n            profile: cast.profile_path,\n            character: cast.character,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }\n          });\n        });\n\n      case \"reviews\":\n        return reviews && reviews.results.map(review => {\n          return /*#__PURE__*/React.createElement(ReviewsCarousel, {\n            author: review.author,\n            content: review.content,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }\n          });\n        });\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CarouselStyling, {\n    color: color,\n    activeDotColor: activeDotColor,\n    dotColor: dotColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), category())));\n};\n\nconst mapStateToProps = state => ({\n  movies: state.movieSlider,\n  trailers: state.trailers,\n  reviews: state.displayMovie ? state.displayMovie.reviews : null\n});\n\nexport default connect(mapStateToProps)(Carousel);","map":{"version":3,"sources":["/home/pinchas/code/projects/movie-finder/src/components/carousel/carousel.component.jsx"],"names":["React","TrailerContainer","YouTube","connect","Slider","MovieSlider","MovieCastCarousel","ReviewsCarousel","CarouselStyling","useWidth","Carousel","type","trailers","movies","reviews","movieCast","slidesToShow","slidesToScroll","autoplay","fade","color","activeDotColor","dotColor","width","optsYouTube","height","playerVars","settings","dots","infinite","autoplaySpeed","pauseOnHover","lazyLoad","category","map","trailer","id","key","movie","cast","name","profile_path","character","results","review","author","content","mapStateToProps","state","movieSlider","displayMovie"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { TrailerContainer } from \"./Carousel.styles\";\nimport YouTube from \"react-youtube\";\nimport \"./carousel.styles.css\";\nimport { connect } from \"react-redux\";\n\nimport Slider from \"react-slick\";\nimport MovieSlider from \"../movieSLider/MovieSlider.component\";\nimport MovieCastCarousel from \"../MovieCastCarousel/MovieCastCarousel.component\";\nimport ReviewsCarousel from \"../ReviewsCarousel/ReviewsCarousel.component\";\nimport { CarouselStyling } from \"./Carousel.styles\";\nimport useWidth from \"../../hooks/useWidth.hooks\";\nconst Carousel = ({\n  type,\n  trailers,\n  movies,\n  reviews,\n  movieCast,\n  slidesToShow,\n  slidesToScroll,\n  autoplay,\n  fade,\n  color,\n  activeDotColor,\n  dotColor,\n}) => {\n  const width = useWidth().width;\n  const optsYouTube = {\n    height: \"390\",\n    width: \"640\",\n    playerVars: {\n      autoplay: 0,\n    },\n  };\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    slidesToShow: slidesToShow,\n    slidesToScroll: slidesToScroll,\n    autoplay: autoplay,\n    autoplaySpeed: 4000,\n    fade: fade,\n    pauseOnHover: true,\n    lazyLoad: true,\n  };\n\n  const category = () => {\n    switch (type) {\n      case \"trailers\":\n        return (\n          trailers &&\n          trailers.map((trailer) => {\n            return (\n              <div key={trailer.id}>\n                <TrailerContainer width={width}>\n                  <YouTube\n                    videoId={trailer.key}\n                    opts={optsYouTube}\n                    // onReady={_onReadyYouTube}\n                  />\n                </TrailerContainer>\n              </div>\n            );\n          })\n        );\n      case \"movieSlider\":\n        return (\n          movies &&\n          movies.map((movie) => {\n            return (\n              <div key={movie.id}>\n                <MovieSlider movie={movie}></MovieSlider>\n              </div>\n            );\n          })\n        );\n      case \"movieCast\":\n        return (\n          movieCast &&\n          movieCast.map((cast) => {\n            return (\n              <MovieCastCarousel\n                name={cast.name}\n                profile={cast.profile_path}\n                character={cast.character}\n              />\n            );\n          })\n        );\n      case \"reviews\":\n        return (\n          reviews &&\n          reviews.results.map((review) => {\n            return (\n              <ReviewsCarousel\n                author={review.author}\n                content={review.content}\n              />\n            );\n          })\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <>\n      <CarouselStyling\n        color={color}\n        activeDotColor={activeDotColor}\n        dotColor={dotColor}\n      >\n        <Slider {...settings}>{category()}</Slider>\n      </CarouselStyling>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  movies: state.movieSlider,\n  trailers: state.trailers,\n  reviews: state.displayMovie ? state.displayMovie.reviews : null,\n});\n\nexport default connect(mapStateToProps)(Carousel);\n"]},"metadata":{},"sourceType":"module"}