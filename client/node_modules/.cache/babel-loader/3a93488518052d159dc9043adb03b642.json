{"ast":null,"code":"import { tmdbIdApi } from \"../apis/tmdbApi\";\nexport const filterMovies = async data => {\n  const page = data.page;\n  const total_results = data.total_results;\n  const total_pages = data.total_pages;\n  const results = await Promise.all(data.results.map(async movie => await tmdbIdApi(movie.id)));\n  const filteredResults = results.filter(movie => {\n    return movie.imdb_id;\n  });\n  const obj = {\n    page,\n    total_results,\n    total_pages,\n    results: filteredResults\n  };\n  return obj;\n};\nexport const filterActors = async data => {\n  const page = data.page;\n  const total_results = data.total_results;\n  const total_pages = data.total_pages;\n  const results = data.results;\n  const filter = results.filter(actor => {\n    return actor.known_for[0].media_type !== \"tv\" && actor.known_for_department === \"Acting\";\n  });\n};","map":{"version":3,"sources":["/home/pinchas/code/projects/movie-finder/src/utlis/filterMovies.js"],"names":["tmdbIdApi","filterMovies","data","page","total_results","total_pages","results","Promise","all","map","movie","id","filteredResults","filter","imdb_id","obj","filterActors","actor","known_for","media_type","known_for_department"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,IAAP,IAAgB;AAC1C,QAAMC,IAAI,GAAGD,IAAI,CAACC,IAAlB;AACA,QAAMC,aAAa,GAAGF,IAAI,CAACE,aAA3B;AACA,QAAMC,WAAW,GAAGH,IAAI,CAACG,WAAzB;AACA,QAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAR,CACpBN,IAAI,CAACI,OAAL,CAAaG,GAAb,CAAiB,MAAOC,KAAP,IAAiB,MAAMV,SAAS,CAACU,KAAK,CAACC,EAAP,CAAjD,CADoB,CAAtB;AAGA,QAAMC,eAAe,GAAGN,OAAO,CAACO,MAAR,CAAgBH,KAAD,IAAW;AAChD,WAAOA,KAAK,CAACI,OAAb;AACD,GAFuB,CAAxB;AAIA,QAAMC,GAAG,GAAG;AACVZ,IAAAA,IADU;AAEVC,IAAAA,aAFU;AAGVC,IAAAA,WAHU;AAIVC,IAAAA,OAAO,EAAEM;AAJC,GAAZ;AAMA,SAAOG,GAAP;AACD,CAlBM;AAoBP,OAAO,MAAMC,YAAY,GAAG,MAAOd,IAAP,IAAgB;AAC1C,QAAMC,IAAI,GAAGD,IAAI,CAACC,IAAlB;AACA,QAAMC,aAAa,GAAGF,IAAI,CAACE,aAA3B;AACA,QAAMC,WAAW,GAAGH,IAAI,CAACG,WAAzB;AACA,QAAMC,OAAO,GAAGJ,IAAI,CAACI,OAArB;AACA,QAAMO,MAAM,GAAGP,OAAO,CAACO,MAAR,CAAgBI,KAAD,IAAW;AACvC,WACEA,KAAK,CAACC,SAAN,CAAgB,CAAhB,EAAmBC,UAAnB,KAAkC,IAAlC,IACAF,KAAK,CAACG,oBAAN,KAA+B,QAFjC;AAID,GALc,CAAf;AAMD,CAXM","sourcesContent":["import { tmdbIdApi } from \"../apis/tmdbApi\";\nexport const filterMovies = async (data) => {\n  const page = data.page;\n  const total_results = data.total_results;\n  const total_pages = data.total_pages;\n  const results = await Promise.all(\n    data.results.map(async (movie) => await tmdbIdApi(movie.id))\n  );\n  const filteredResults = results.filter((movie) => {\n    return movie.imdb_id;\n  });\n\n  const obj = {\n    page,\n    total_results,\n    total_pages,\n    results: filteredResults,\n  };\n  return obj;\n};\n\nexport const filterActors = async (data) => {\n  const page = data.page;\n  const total_results = data.total_results;\n  const total_pages = data.total_pages;\n  const results = data.results;\n  const filter = results.filter((actor) => {\n    return (\n      actor.known_for[0].media_type !== \"tv\" &&\n      actor.known_for_department === \"Acting\"\n    );\n  });\n};\n"]},"metadata":{},"sourceType":"module"}