{"ast":null,"code":"var _jsxFileName = \"/home/pinchas/code/projects/movie-finder/src/components/MovieListSearch/MovieListSearch.jsx\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { selectedMovie, fetchMovies, fetchAdvancedSearch, fetchActorMovies, fetchPopularActors } from \"../../redux/actions/index\";\nimport Pagination from \"../Pagination/Pagination.component\";\nimport Card from \"../card/Card\";\n\nconst MovieListSearch = props => {\n  const {\n    query\n  } = useParams();\n  console.log(query);\n\n  const movies = () => {\n    const showMovies = (fetch, data, actor) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Pagination, {\n        api: fetch,\n        data: data,\n        actor: actor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: styleDiv,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }, data && data.results.map(movie => {\n        if (movie === null) return;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: movie.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          movie: movie,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }\n        }));\n      })));\n    };\n\n    switch (props.showSearchResults) {\n      case \"search\":\n        return showMovies(props.fetchMovies, props.fetchMoviesData);\n\n      case \"advanced-search\":\n        return showMovies(props.fetchAdvancedSearch, props.advancedSearchMoviesData);\n\n      case \"actor\":\n        return showMovies(props.fetchActorMovies, props.actorsMoviesData, query);\n\n      default:\n        return null;\n    }\n  };\n\n  const styleDiv = {\n    display: \"flex\",\n    flexdirection: \"column\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    background: \"var(--secondary-color)\"\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      background: \"var(--secondary-color)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), movies()) //\n  ;\n};\n\nconst mapStateToProps = state => ({\n  fetchMoviesData: state.fetchMovies,\n  advancedSearchMoviesData: state.fetchAdvancedSearch,\n  actorsMoviesData: state.fetchActorMovies,\n  fetchPopularActorsData: state.fetchPopularActors,\n  showSearchResults: state.showSearchResults\n});\n\nexport default connect(mapStateToProps, {\n  selectedMovie: selectedMovie,\n  fetchMovies: page => fetchMovies(page),\n  fetchAdvancedSearch: page => fetchAdvancedSearch(page),\n  fetchActorMovies: (id, page) => fetchActorMovies(id, page),\n  fetchPopularActors: page => fetchPopularActors(page)\n})(MovieListSearch);","map":{"version":3,"sources":["/home/pinchas/code/projects/movie-finder/src/components/MovieListSearch/MovieListSearch.jsx"],"names":["React","useEffect","useParams","connect","selectedMovie","fetchMovies","fetchAdvancedSearch","fetchActorMovies","fetchPopularActors","Pagination","Card","MovieListSearch","props","query","console","log","movies","showMovies","fetch","data","actor","styleDiv","results","map","movie","id","showSearchResults","fetchMoviesData","advancedSearchMoviesData","actorsMoviesData","display","flexdirection","flexWrap","justifyContent","alignContent","background","mapStateToProps","state","fetchPopularActorsData","page"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  selectedMovie,\n  fetchMovies,\n  fetchAdvancedSearch,\n  fetchActorMovies,\n  fetchPopularActors,\n} from \"../../redux/actions/index\";\nimport Pagination from \"../Pagination/Pagination.component\";\n\nimport Card from \"../card/Card\";\nconst MovieListSearch = (props) => {\n  const { query } = useParams();\n  console.log(query);\n  const movies = () => {\n    const showMovies = (fetch, data, actor) => {\n      return (\n        <>\n          <Pagination api={fetch} data={data} actor={actor} />\n          <div style={styleDiv}>\n            {data &&\n              data.results.map((movie) => {\n                if (movie === null) return;\n\n                return (\n                  <div key={movie.id}>\n                    <Card movie={movie}></Card>\n                  </div>\n                );\n              })}\n          </div>\n        </>\n      );\n    };\n    switch (props.showSearchResults) {\n      case \"search\":\n        return showMovies(props.fetchMovies, props.fetchMoviesData);\n      case \"advanced-search\":\n        return showMovies(\n          props.fetchAdvancedSearch,\n          props.advancedSearchMoviesData\n        );\n      case \"actor\":\n        return showMovies(\n          props.fetchActorMovies,\n          props.actorsMoviesData,\n          query\n        );\n      default:\n        return null;\n    }\n  };\n\n  const styleDiv = {\n    display: \"flex\",\n    flexdirection: \"column\",\n\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    background: \"var(--secondary-color)\",\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          background: \"var(--secondary-color)\",\n        }}\n      ></div>\n      {movies()}\n    </>\n    //\n  );\n};\nconst mapStateToProps = (state) => ({\n  fetchMoviesData: state.fetchMovies,\n  advancedSearchMoviesData: state.fetchAdvancedSearch,\n  actorsMoviesData: state.fetchActorMovies,\n  fetchPopularActorsData: state.fetchPopularActors,\n  showSearchResults: state.showSearchResults,\n});\nexport default connect(mapStateToProps, {\n  selectedMovie: selectedMovie,\n  fetchMovies: (page) => fetchMovies(page),\n  fetchAdvancedSearch: (page) => fetchAdvancedSearch(page),\n  fetchActorMovies: (id, page) => fetchActorMovies(id, page),\n  fetchPopularActors: (page) => fetchPopularActors(page),\n})(MovieListSearch);\n"]},"metadata":{},"sourceType":"module"}