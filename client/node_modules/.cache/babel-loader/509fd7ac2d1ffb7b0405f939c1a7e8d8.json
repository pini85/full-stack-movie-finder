{"ast":null,"code":"var _jsxFileName = \"/home/pinchas/code/projects/movie-finder/src/components/Suggestion/Suggestion.jsx\";\nimport React from \"react\";\nimport { Container, Img, IconAndYearContainer } from \"./Suggestion.styles\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { selectedMovieId, movieSuggestions, search, fetchActorMovies, showSearchResults } from \"../../redux/actions/index\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFilm, faStar, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport useWidth from \"../../hooks/useWidth.hooks\";\n\nconst Suggestion = props => {\n  const width = useWidth().width;\n\n  const handleClick = type => {\n    props.movieSuggestions(false);\n    props.setSearchQuery(\"\");\n\n    if (type === \"movie\") {\n      props.selectedMovieId(props.item.id);\n      props.history.push(`/movie/${props.item.id}`);\n    } else {\n      props.fetchActorMovies(props.item.name, 1);\n      props.showSearchResults(\"actor\");\n      props.history.push(`/actors/${props.item.name}/page/1`);\n    }\n  };\n\n  const renderContent = () => {\n    if (props.item.known_for_department) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleClick(\"cast\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        type: \"actor\",\n        width: width,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Img, {\n        src: `http://image.tmdb.org/t/p/w92/${props.item.profile_path}`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, \" \", props.item.name), /*#__PURE__*/React.createElement(IconAndYearContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faUser,\n        style: {\n          marginBottom: \"5px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: \"1rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, props.item.known_for_department === \"Acting\" ? \"Actor\" : \"Director\")))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => handleClick(\"movie\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        width: width,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Img, {\n        src: `http://image.tmdb.org/t/p/w92/${props.item.poster_path}`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, \" \", props.item.title), /*#__PURE__*/React.createElement(IconAndYearContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faFilm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: \"1rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, props.item.release_date ? props.item.release_date.substr(0, 4) : null)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faStar,\n        style: {\n          color: \"orange\",\n          marginRight: \"1rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }), props.item.vote_average))));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, renderContent());\n};\n\nexport default compose(withRouter, connect(null, {\n  selectedMovieId: selectedMovieId,\n  search: search,\n  movieSuggestions: movieSuggestions,\n  fetchActorMovies: name => fetchActorMovies(name),\n  showSearchResults: type => showSearchResults(type)\n}))(Suggestion);","map":{"version":3,"sources":["/home/pinchas/code/projects/movie-finder/src/components/Suggestion/Suggestion.jsx"],"names":["React","Container","Img","IconAndYearContainer","connect","withRouter","compose","selectedMovieId","movieSuggestions","search","fetchActorMovies","showSearchResults","FontAwesomeIcon","faFilm","faStar","faUser","useWidth","Suggestion","props","width","handleClick","type","setSearchQuery","item","id","history","push","name","renderContent","known_for_department","profile_path","marginBottom","marginLeft","poster_path","title","release_date","substr","color","marginRight","vote_average"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Container, Img, IconAndYearContainer } from \"./Suggestion.styles\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport {\n  selectedMovieId,\n  movieSuggestions,\n  search,\n  fetchActorMovies,\n  showSearchResults,\n} from \"../../redux/actions/index\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFilm, faStar, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport useWidth from \"../../hooks/useWidth.hooks\";\n\nconst Suggestion = (props) => {\n  const width = useWidth().width;\n  const handleClick = (type) => {\n    props.movieSuggestions(false);\n    props.setSearchQuery(\"\");\n    if (type === \"movie\") {\n      props.selectedMovieId(props.item.id);\n      props.history.push(`/movie/${props.item.id}`);\n    } else {\n      props.fetchActorMovies(props.item.name, 1);\n      props.showSearchResults(\"actor\");\n      props.history.push(`/actors/${props.item.name}/page/1`);\n    }\n  };\n  const renderContent = () => {\n    if (props.item.known_for_department) {\n      return (\n        <div onClick={() => handleClick(\"cast\")}>\n          <Container type=\"actor\" width={width}>\n            <Img\n              src={`http://image.tmdb.org/t/p/w92/${props.item.profile_path}`}\n              alt=\"\"\n            />\n            <div>\n              <div> {props.item.name}</div>\n              <IconAndYearContainer>\n                <FontAwesomeIcon\n                  icon={faUser}\n                  style={{ marginBottom: \"5px\" }}\n                />\n                <div style={{ marginLeft: \"1rem\" }}>\n                  {props.item.known_for_department === \"Acting\"\n                    ? \"Actor\"\n                    : \"Director\"}\n                </div>\n              </IconAndYearContainer>\n            </div>\n          </Container>\n        </div>\n      );\n    } else {\n      return (\n        <div onClick={() => handleClick(\"movie\")}>\n          <Container width={width}>\n            <Img\n              src={`http://image.tmdb.org/t/p/w92/${props.item.poster_path}`}\n              alt=\"\"\n            />\n\n            <div>\n              <div> {props.item.title}</div>\n              <IconAndYearContainer>\n                <FontAwesomeIcon icon={faFilm} />\n                <div style={{ marginLeft: \"1rem\" }}>\n                  {props.item.release_date\n                    ? props.item.release_date.substr(0, 4)\n                    : null}\n                </div>\n              </IconAndYearContainer>\n              <div>\n                <FontAwesomeIcon\n                  icon={faStar}\n                  style={{ color: \"orange\", marginRight: \"1rem\" }}\n                />\n                {props.item.vote_average}\n              </div>\n            </div>\n          </Container>\n        </div>\n      );\n    }\n  };\n\n  return <>{renderContent()}</>;\n};\n\nexport default compose(\n  withRouter,\n  connect(null, {\n    selectedMovieId: selectedMovieId,\n    search: search,\n    movieSuggestions: movieSuggestions,\n    fetchActorMovies: (name) => fetchActorMovies(name),\n    showSearchResults: (type) => showSearchResults(type),\n  })\n)(Suggestion);\n"]},"metadata":{},"sourceType":"module"}