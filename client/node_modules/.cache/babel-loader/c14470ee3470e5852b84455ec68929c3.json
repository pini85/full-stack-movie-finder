{"ast":null,"code":"var _jsxFileName = \"/home/pinchas/code/projects/movie-finder/src/components/showMovie/ShowMovie.component.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { connect } from \"react-redux\"; // import styled from \"styled-components\";\n\nimport { useParams } from \"react-router-dom\";\nimport { goToMovie } from \"../../redux/actions/index\";\nimport ShowMovieInfo from \"../showMovieInfo/ShowMovieInfo.component\";\nimport ShowTorrents from \"../ShowTorrents/ShowTorrents.component\";\nimport ShowSubtitles from \"../ShowSubtitles/ShowSubtitles.component\";\nimport ShowMagnets from \"../ShowMagnets/ShowMagnets.component\";\nimport OptionButton from \"../OptionButton/OptionButton.component\";\nimport OptionButtonWrapper from \"../OptionButtonWrapper/OptionButtonWrapper.component\";\nimport MovieCast from \"../MovieCast/MovieCast.component\";\nimport Trailer from \"../Trailer/Trailer.component\";\nimport Reviews from \"../Reviews/Review.component\";\nimport Modal from \"../Modal/Modal.component\";\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen.component\";\nimport { Container, HeroContainer, TopContainer, MovieCard, TagLineContainer, BottomContainer, OptionsContainer, PlotContainer, MovieCastContainer, LeftSide, RightSide, ModalContainer } from \"./ShowMovie.styles\";\n\nconst ShowMovie = ({\n  item,\n  colors,\n  goToMovie,\n  isSecretSequence\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isToggled, setToggled] = useState(false);\n  const [optionType, setOptionType] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      await goToMovie(id);\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [id]);\n\n  const handleOptionClick = type => {\n    setToggled(true);\n    setOptionType(type);\n    window.scrollTo(0, 0);\n    document.body.style.overflow = \"hidden\";\n  };\n\n  const showOption = () => {\n    switch (optionType) {\n      case \"torrent\":\n        return /*#__PURE__*/React.createElement(ShowTorrents, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 16\n          }\n        });\n\n      case \"sub\":\n        return /*#__PURE__*/React.createElement(ShowSubtitles, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 16\n          }\n        });\n\n      case \"magnets\":\n        return /*#__PURE__*/React.createElement(ShowMagnets, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 16\n          }\n        });\n\n      default:\n        return null;\n    }\n  }; // const VibrantC = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.vibrant : \"var(primary-color)\"};\n  // `;\n  // const DarkVibrant = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.darkVibrant : \"var(primary-color)\"};\n  // `;\n  // const LightVibrant = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.lightVibrant : \"var(primary-color-light)\"};\n  // `;\n  // const Muted = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.muted : \"var(secondary-color)\"};\n  // `;\n  // const DarkMuted = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.darkMuted : \"var(secondary-color\"};\n  // `;\n  // const LightMuted = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.lightMuted : \"var(secondary-color-light)\"};\n  // `;\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"hi\", isLoading ? /*#__PURE__*/React.createElement(LoadingScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }) : item && /*#__PURE__*/React.createElement(Container, {\n    color1: colors.darkMuted,\n    color2: colors.muted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Trailer, {\n    poster: item.poster,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), isToggled && /*#__PURE__*/React.createElement(Modal, {\n    isToggled: isToggled,\n    setToggled: setToggled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ModalContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, isToggled && showOption())), /*#__PURE__*/React.createElement(MovieCard, {\n    color: colors.lightVibrant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HeroContainer, {\n    poster: item.backdrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TopContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ShowMovieInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(BottomContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(LeftSide, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PlotContainer, {\n    tagline: item.tagLine,\n    color: colors.darkVibrant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, item.tagLine && /*#__PURE__*/React.createElement(TagLineContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, \"\\u201C\"), item.tagLine, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, \"\\u201D\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, item.plot)), /*#__PURE__*/React.createElement(Reviews, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(RightSide, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AnimatePresence, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, isSecretSequence && /*#__PURE__*/React.createElement(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    transition: {\n      duration: 0.3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(OptionsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(OptionButtonWrapper, {\n    textColor: colors.lightVibrant,\n    color1: colors.darkVibrant,\n    color2: colors.vibrant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(OptionButton, {\n    handleOptionClick: handleOptionClick,\n    title: \"torrents\",\n    type: \"torrent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(OptionButton, {\n    handleOptionClick: handleOptionClick,\n    title: \"subtitles\",\n    type: \"subtitles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(OptionButton, {\n    handleOptionClick: handleOptionClick,\n    title: \"magnets\",\n    type: \"magnets\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  }))))))), /*#__PURE__*/React.createElement(MovieCastContainer, {\n    color: colors.lightVibrant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MovieCast, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  if (state.displayMovie) {\n    return {\n      item: state.displayMovie,\n      colors: state.displayMovie.colors,\n      isSecretSequence: state.isSecretSequence\n    };\n  } else {\n    return {};\n  }\n};\n\nexport default connect(mapStateToProps, {\n  goToMovie: goToMovie\n})(ShowMovie);","map":{"version":3,"sources":["/home/pinchas/code/projects/movie-finder/src/components/showMovie/ShowMovie.component.jsx"],"names":["React","useEffect","useState","motion","AnimatePresence","connect","useParams","goToMovie","ShowMovieInfo","ShowTorrents","ShowSubtitles","ShowMagnets","OptionButton","OptionButtonWrapper","MovieCast","Trailer","Reviews","Modal","LoadingScreen","Container","HeroContainer","TopContainer","MovieCard","TagLineContainer","BottomContainer","OptionsContainer","PlotContainer","MovieCastContainer","LeftSide","RightSide","ModalContainer","ShowMovie","item","colors","isSecretSequence","isLoading","setIsLoading","isToggled","setToggled","optionType","setOptionType","id","fetchData","handleOptionClick","type","window","scrollTo","document","body","style","overflow","showOption","darkMuted","muted","poster","lightVibrant","backdrop","tagLine","darkVibrant","plot","opacity","duration","vibrant","mapStateToProps","state","displayMovie"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { connect } from \"react-redux\";\n// import styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\nimport { goToMovie } from \"../../redux/actions/index\";\nimport ShowMovieInfo from \"../showMovieInfo/ShowMovieInfo.component\";\nimport ShowTorrents from \"../ShowTorrents/ShowTorrents.component\";\nimport ShowSubtitles from \"../ShowSubtitles/ShowSubtitles.component\";\nimport ShowMagnets from \"../ShowMagnets/ShowMagnets.component\";\nimport OptionButton from \"../OptionButton/OptionButton.component\";\nimport OptionButtonWrapper from \"../OptionButtonWrapper/OptionButtonWrapper.component\";\nimport MovieCast from \"../MovieCast/MovieCast.component\";\nimport Trailer from \"../Trailer/Trailer.component\";\nimport Reviews from \"../Reviews/Review.component\";\nimport Modal from \"../Modal/Modal.component\";\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen.component\";\n\nimport {\n  Container,\n  HeroContainer,\n  TopContainer,\n  MovieCard,\n  TagLineContainer,\n  BottomContainer,\n  OptionsContainer,\n  PlotContainer,\n  MovieCastContainer,\n  LeftSide,\n  RightSide,\n  ModalContainer,\n} from \"./ShowMovie.styles\";\n\nconst ShowMovie = ({ item, colors, goToMovie, isSecretSequence }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isToggled, setToggled] = useState(false);\n  const [optionType, setOptionType] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      await goToMovie(id);\n      setIsLoading(false);\n    };\n    fetchData();\n  }, [id]);\n  const handleOptionClick = (type) => {\n    setToggled(true);\n    setOptionType(type);\n    window.scrollTo(0, 0);\n    document.body.style.overflow = \"hidden\";\n  };\n  const showOption = () => {\n    switch (optionType) {\n      case \"torrent\":\n        return <ShowTorrents></ShowTorrents>;\n      case \"sub\":\n        return <ShowSubtitles></ShowSubtitles>;\n      case \"magnets\":\n        return <ShowMagnets></ShowMagnets>;\n      default:\n        return null;\n    }\n  };\n\n  // const VibrantC = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.vibrant : \"var(primary-color)\"};\n  // `;\n  // const DarkVibrant = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.darkVibrant : \"var(primary-color)\"};\n  // `;\n  // const LightVibrant = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.lightVibrant : \"var(primary-color-light)\"};\n  // `;\n  // const Muted = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.muted : \"var(secondary-color)\"};\n  // `;\n  // const DarkMuted = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.darkMuted : \"var(secondary-color\"};\n  // `;\n  // const LightMuted = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.lightMuted : \"var(secondary-color-light)\"};\n  // `;\n\n  return (\n    <>\n      hi\n      {isLoading ? (\n        <LoadingScreen></LoadingScreen>\n      ) : (\n        item && (\n          <Container color1={colors.darkMuted} color2={colors.muted}>\n            <Trailer poster={item.poster} />\n            {isToggled && (\n              <Modal isToggled={isToggled} setToggled={setToggled}>\n                <ModalContainer>{isToggled && showOption()}</ModalContainer>\n              </Modal>\n            )}\n\n            <MovieCard color={colors.lightVibrant}>\n              <HeroContainer poster={item.backdrop}>\n                <TopContainer>\n                  <ShowMovieInfo />\n                </TopContainer>\n              </HeroContainer>\n              <BottomContainer>\n                <LeftSide>\n                  <PlotContainer\n                    tagline={item.tagLine}\n                    color={colors.darkVibrant}\n                  >\n                    {item.tagLine && (\n                      <TagLineContainer>\n                        <span>&ldquo;</span>\n                        {item.tagLine}\n                        <span>&rdquo;</span>\n                      </TagLineContainer>\n                    )}\n                    <p>{item.plot}</p>\n                  </PlotContainer>\n\n                  <Reviews />\n                  {/* <DirectorAndWriterContainer>\n                  <div>Director: {item.director}</div>\n                  <div>Writers: {item.writer}</div>\n                </DirectorAndWriterContainer> */}\n                </LeftSide>\n                <RightSide>\n                  <AnimatePresence>\n                    {isSecretSequence && (\n                      <motion.div\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                        transition={{ duration: 0.3 }}\n                      >\n                        <OptionsContainer>\n                          <OptionButtonWrapper\n                            textColor={colors.lightVibrant}\n                            color1={colors.darkVibrant}\n                            color2={colors.vibrant}\n                          >\n                            <OptionButton\n                              handleOptionClick={handleOptionClick}\n                              title=\"torrents\"\n                              type=\"torrent\"\n                            />\n                            <OptionButton\n                              handleOptionClick={handleOptionClick}\n                              title=\"subtitles\"\n                              type=\"subtitles\"\n                            />\n                            <OptionButton\n                              handleOptionClick={handleOptionClick}\n                              title=\"magnets\"\n                              type=\"magnets\"\n                            />\n                          </OptionButtonWrapper>\n\n                          {/* <ShowMovieOption title=\"torrents\" type=\"torrent\" />\n                          <ShowMovieOption title=\"subtitles\" type=\"sub\" />\n                          <ShowMovieOption title=\"magnets\" type=\"magnets\" /> */}\n                        </OptionsContainer>\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                </RightSide>\n              </BottomContainer>\n              {/* \n              <div style={{ display: \"flex\" }}>\n                <DarkVibrant></DarkVibrant>\n                <VibrantC></VibrantC>\n                <LightVibrant></LightVibrant>\n              </div>\n              <div style={{ display: \"flex\" }}>\n                <DarkMuted></DarkMuted>\n                <Muted></Muted>\n                <LightMuted></LightMuted>\n              </div> */}\n              <MovieCastContainer color={colors.lightVibrant}>\n                <MovieCast />\n              </MovieCastContainer>\n            </MovieCard>\n          </Container>\n        )\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  if (state.displayMovie) {\n    return {\n      item: state.displayMovie,\n      colors: state.displayMovie.colors,\n      isSecretSequence: state.isSecretSequence,\n    };\n  } else {\n    return {};\n  }\n};\nexport default connect(mapStateToProps, {\n  goToMovie: goToMovie,\n})(ShowMovie);\n"]},"metadata":{},"sourceType":"module"}