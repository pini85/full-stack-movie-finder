{"ast":null,"code":"var _jsxFileName = \"/home/pinchas/code/projects/movie-finder/src/components/CastOptions/CastOptions.component.jsx\";\nimport React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Container, TitleContainer, OptionsContainer, OptionContainer } from \"./CastOptions.styles\";\n\nconst CastOptions = ({\n  name,\n  setCastOption,\n  setActivateInput,\n  inputRef\n}) => {\n  const [isToggled, setToggled] = useState(false);\n  const [isActive, setActive] = useState(false);\n\n  const handleClick = () => {\n    setToggled(prevValue => !prevValue);\n    setActive(prevValue => !prevValue);\n  };\n\n  const handleOptionClick = e => {\n    setToggled(prevValue => !prevValue);\n    setActive(prevValue => !prevValue);\n    setTimeout(() => {\n      setActivateInput(true);\n      inputRef.current.focus();\n    }, 340);\n    setCastOption(e.target.getAttribute(\"data-tag\"));\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TitleContainer, {\n    isActive: isActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Add \", name)), /*#__PURE__*/React.createElement(AnimatePresence, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, isToggled && /*#__PURE__*/React.createElement(motion.div, {\n    initial: {\n      height: 0,\n      opacity: 0\n    },\n    animate: {\n      height: \"auto\",\n      opacity: 1\n    },\n    exit: {\n      height: 0,\n      opacity: 1\n    },\n    style: {\n      overflow: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(OptionsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, \"Do you want \", name, \" in\"), /*#__PURE__*/React.createElement(OptionContainer, {\n    \"data-tag\": \"or\",\n    onClick: e => handleOptionClick(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"In different movies\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"- OR -\"), /*#__PURE__*/React.createElement(OptionContainer, {\n    \"data-tag\": \"and\",\n    onClick: e => handleOptionClick(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"In the same movie\")))));\n};\n\nexport default CastOptions;","map":{"version":3,"sources":["/home/pinchas/code/projects/movie-finder/src/components/CastOptions/CastOptions.component.jsx"],"names":["React","useState","motion","AnimatePresence","Container","TitleContainer","OptionsContainer","OptionContainer","CastOptions","name","setCastOption","setActivateInput","inputRef","isToggled","setToggled","isActive","setActive","handleClick","prevValue","handleOptionClick","e","setTimeout","current","focus","target","getAttribute","height","opacity","overflow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,eAAjB,QAAwC,eAAxC;AACA,SACEC,SADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEC,eAJF,QAKO,sBALP;;AAMA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,aAAR;AAAuBC,EAAAA,gBAAvB;AAAyCC,EAAAA;AAAzC,CAAD,KAAyD;AAC3E,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACc,QAAD,EAAWC,SAAX,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMgB,WAAW,GAAG,MAAM;AACxBH,IAAAA,UAAU,CAAEI,SAAD,IAAe,CAACA,SAAjB,CAAV;AACAF,IAAAA,SAAS,CAAEE,SAAD,IAAe,CAACA,SAAjB,CAAT;AACD,GAHD;;AAIA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/BN,IAAAA,UAAU,CAAEI,SAAD,IAAe,CAACA,SAAjB,CAAV;AACAF,IAAAA,SAAS,CAAEE,SAAD,IAAe,CAACA,SAAjB,CAAT;AACAG,IAAAA,UAAU,CAAC,MAAM;AACfV,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAC,MAAAA,QAAQ,CAACU,OAAT,CAAiBC,KAAjB;AACD,KAHS,EAGP,GAHO,CAAV;AAIAb,IAAAA,aAAa,CAACU,CAAC,CAACI,MAAF,CAASC,YAAT,CAAsB,UAAtB,CAAD,CAAb;AACD,GARD;;AASA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEV,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,OAAO,EAAEE,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA+BR,IAA/B,CADF,CADF,eAKE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,SAAS,iBACR,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,OAAO,EAAE;AAAEa,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,OAAO,EAAE;AAAtB,KADX;AAEE,IAAA,OAAO,EAAE;AAAED,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAFX;AAGE,IAAA,IAAI,EAAE;AAAED,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,OAAO,EAAE;AAAtB,KAHR;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkBnB,IAAlB,QADF,eAEE,oBAAC,eAAD;AACE,gBAAS,IADX;AAEE,IAAA,OAAO,EAAGW,CAAD,IAAOD,iBAAiB,CAACC,CAAD,CAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE,oBAAC,eAAD;AACE,gBAAS,KADX;AAEE,IAAA,OAAO,EAAGA,CAAD,IAAOD,iBAAiB,CAACC,CAAD,CAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBATF,CANF,CAFJ,CALF,CADF;AAmCD,CApDD;;AAqDA,eAAeZ,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  Container,\n  TitleContainer,\n  OptionsContainer,\n  OptionContainer,\n} from \"./CastOptions.styles\";\nconst CastOptions = ({ name, setCastOption, setActivateInput, inputRef }) => {\n  const [isToggled, setToggled] = useState(false);\n  const [isActive, setActive] = useState(false);\n\n  const handleClick = () => {\n    setToggled((prevValue) => !prevValue);\n    setActive((prevValue) => !prevValue);\n  };\n  const handleOptionClick = (e) => {\n    setToggled((prevValue) => !prevValue);\n    setActive((prevValue) => !prevValue);\n    setTimeout(() => {\n      setActivateInput(true);\n      inputRef.current.focus();\n    }, 340);\n    setCastOption(e.target.getAttribute(\"data-tag\"));\n  };\n  return (\n    <Container>\n      <TitleContainer isActive={isActive}>\n        <h4 onClick={handleClick}>Add {name}</h4>\n      </TitleContainer>\n\n      <AnimatePresence>\n        {isToggled && (\n          <motion.div\n            initial={{ height: 0, opacity: 0 }}\n            animate={{ height: \"auto\", opacity: 1 }}\n            exit={{ height: 0, opacity: 1 }}\n            style={{ overflow: \"hidden\" }}\n          >\n            <OptionsContainer>\n              <div>Do you want {name} in</div>\n              <OptionContainer\n                data-tag=\"or\"\n                onClick={(e) => handleOptionClick(e)}\n              >\n                In different movies\n              </OptionContainer>\n              <div>- OR -</div>\n              <OptionContainer\n                data-tag=\"and\"\n                onClick={(e) => handleOptionClick(e)}\n              >\n                In the same movie\n              </OptionContainer>\n            </OptionsContainer>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </Container>\n  );\n};\nexport default CastOptions;\n"]},"metadata":{},"sourceType":"module"}