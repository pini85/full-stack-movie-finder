{"ast":null,"code":"var _jsxFileName = \"/home/pinchas/code/projects/movie-finder/src/components/Pagination/Pagination.component.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { Container, ButtonContainer } from \"./pagination.styles\";\nimport useDidUpdateEffect from \"../../hooks/useDidUpdateEffect.hooks\";\nimport { isFetching } from \"../../redux/actions/index\";\nimport useWidth from \"../../hooks/useWidth.hooks\";\n\nconst Pagination = ({\n  api,\n  data,\n  actor,\n  history,\n  location,\n  isFetching\n}) => {\n  const [buttons, setButtons] = useState(null);\n  const [count, setCount] = useState(1);\n  const [amount, setAmount] = useState(20);\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalPages = data ? data.total_pages : null;\n  const width = useWidth().width;\n\n  const changeLocation = () => {\n    const loc = location.pathname;\n    const split = loc.split(\"/\");\n    return loc.replace(split[split.length - 1], currentPage);\n  };\n\n  console.log(currentPage);\n  useEffect(() => {\n    setCurrentPage(1);\n    history.push(changeLocation());\n\n    if (width <= 500) {\n      setAmount(5);\n    } else if (width <= 700) {\n      setAmount(10);\n    }\n  }, []);\n  useDidUpdateEffect(() => {\n    const fetchData = async () => {\n      if (actor) {\n        console.log(\"im here\");\n        isFetching(true);\n        await api(actor, currentPage);\n        isFetching(false);\n      } else {\n        isFetching(true);\n        await api(currentPage);\n        isFetching(false);\n      }\n\n      history.push(changeLocation());\n    };\n\n    fetchData(); // displayPage(1);\n  }, [currentPage]);\n  useEffect(() => {\n    let amountOfButtons = [];\n\n    for (let i = count; i <= totalPages; i++) {\n      amountOfButtons.push(i);\n    }\n\n    setButtons(amountOfButtons);\n  }, [currentPage, totalPages]);\n\n  const changeCounter = type => {\n    const difference = currentPage - amount / 2;\n\n    if (difference > 0 && totalPages - currentPage >= amount / 2) {\n      type === \"next\" ? setCount(value => ++value) : setCount(value => --value);\n    }\n  };\n\n  const changeCounterForJump = page => {\n    const difference = page - amount / 2;\n\n    if (difference >= 0 && totalPages - page >= 10) {\n      setCount(difference + 1);\n    } else if (totalPages - page < 10 && page > amount / 2) {\n      setCount(totalPages - 10 - 10);\n    } else {\n      setCount(1);\n    }\n  };\n\n  const prev = () => {\n    setCurrentPage(Math.max(currentPage - 1, 1));\n  };\n\n  const first = setCount => {\n    setCurrentPage(1);\n    setCount(1);\n  };\n\n  const next = () => {\n    setCurrentPage(Math.min(currentPage + 1, totalPages));\n  };\n\n  const jump = page => {\n    const pageNumber = Math.max(1, page);\n    setCurrentPage(Math.min(pageNumber, totalPages));\n  };\n\n  const last = setCount => {\n    setCurrentPage(totalPages);\n\n    if (totalPages === 5) {\n      setCount(totalPages - 4);\n    } else {\n      setCount(totalPages - 19);\n    }\n  };\n\n  const bold = page => {\n    //\n    //\n    //\n    return page == currentPage ? {\n      fontWeight: \"700\",\n      background: \"var(--secondary-color-lightest)\"\n    } : null;\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ButtonContainer, {\n    onClick: () => prev(count, changeCounter(\"prev\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"\\u2190\"), \" Prev\"), /*#__PURE__*/React.createElement(ButtonContainer, {\n    onClick: () => first(setCount),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"First\"), buttons && buttons.length > amount ? buttons.slice(0, amount).map(page => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: page,\n      className: \"hiiii\",\n      style: {\n        ovderflow: \"hidden\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ButtonContainer, {\n      style: bold(page),\n      onClick: () => {\n        jump(page);\n        changeCounterForJump(page);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, page));\n  }) : buttons && buttons.map(page => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hiiii\",\n      style: {\n        ovderflow: \"hidden\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ButtonContainer, {\n      style: bold(page),\n      onClick: () => jump(page, changeCounter()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, page));\n  }), /*#__PURE__*/React.createElement(ButtonContainer, {\n    onClick: () => last(setCount),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, \"Last\"), /*#__PURE__*/React.createElement(ButtonContainer, {\n    onClick: () => next(count, changeCounter(\"next\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, \"Next\"));\n};\n\nconst mapStateToProps = state => ({});\n\nexport default compose(withRouter, connect(mapStateToProps, {\n  isFetching: bool => isFetching(bool),\n  currentPage: page => currentPage(page)\n}))(Pagination);","map":{"version":3,"sources":["/home/pinchas/code/projects/movie-finder/src/components/Pagination/Pagination.component.jsx"],"names":["React","useEffect","useState","connect","compose","withRouter","Container","ButtonContainer","useDidUpdateEffect","isFetching","useWidth","Pagination","api","data","actor","history","location","buttons","setButtons","count","setCount","amount","setAmount","currentPage","setCurrentPage","totalPages","total_pages","width","changeLocation","loc","pathname","split","replace","length","console","log","push","fetchData","amountOfButtons","i","changeCounter","type","difference","value","changeCounterForJump","page","prev","Math","max","first","next","min","jump","pageNumber","last","bold","fontWeight","background","slice","map","ovderflow","mapStateToProps","state","bool"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { Container, ButtonContainer } from \"./pagination.styles\";\nimport useDidUpdateEffect from \"../../hooks/useDidUpdateEffect.hooks\";\nimport { isFetching } from \"../../redux/actions/index\";\nimport useWidth from \"../../hooks/useWidth.hooks\";\n\nconst Pagination = ({ api, data, actor, history, location, isFetching }) => {\n  const [buttons, setButtons] = useState(null);\n  const [count, setCount] = useState(1);\n  const [amount, setAmount] = useState(20);\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalPages = data ? data.total_pages : null;\n  const width = useWidth().width;\n  const changeLocation = () => {\n    const loc = location.pathname;\n\n    const split = loc.split(\"/\");\n    return loc.replace(split[split.length - 1], currentPage);\n  };\n  console.log(currentPage);\n\n  useEffect(() => {\n    setCurrentPage(1);\n    history.push(changeLocation());\n    if (width <= 500) {\n      setAmount(5);\n    } else if (width <= 700) {\n      setAmount(10);\n    }\n  }, []);\n\n  useDidUpdateEffect(() => {\n    const fetchData = async () => {\n      if (actor) {\n        console.log(\"im here\");\n\n        isFetching(true);\n\n        await api(actor, currentPage);\n\n        isFetching(false);\n      } else {\n        isFetching(true);\n        await api(currentPage);\n        isFetching(false);\n      }\n      history.push(changeLocation());\n    };\n    fetchData();\n    // displayPage(1);\n  }, [currentPage]);\n\n  useEffect(() => {\n    let amountOfButtons = [];\n\n    for (let i = count; i <= totalPages; i++) {\n      amountOfButtons.push(i);\n    }\n    setButtons(amountOfButtons);\n  }, [currentPage, totalPages]);\n\n  const changeCounter = (type) => {\n    const difference = currentPage - amount / 2;\n\n    if (difference > 0 && totalPages - currentPage >= amount / 2) {\n      type === \"next\"\n        ? setCount((value) => ++value)\n        : setCount((value) => --value);\n    }\n  };\n  const changeCounterForJump = (page) => {\n    const difference = page - amount / 2;\n\n    if (difference >= 0 && totalPages - page >= 10) {\n      setCount(difference + 1);\n    } else if (totalPages - page < 10 && page > amount / 2) {\n      setCount(totalPages - 10 - 10);\n    } else {\n      setCount(1);\n    }\n  };\n\n  const prev = () => {\n    setCurrentPage(Math.max(currentPage - 1, 1));\n  };\n\n  const first = (setCount) => {\n    setCurrentPage(1);\n    setCount(1);\n  };\n\n  const next = () => {\n    setCurrentPage(Math.min(currentPage + 1, totalPages));\n  };\n\n  const jump = (page) => {\n    const pageNumber = Math.max(1, page);\n    setCurrentPage(Math.min(pageNumber, totalPages));\n  };\n\n  const last = (setCount) => {\n    setCurrentPage(totalPages);\n    if (totalPages === 5) {\n      setCount(totalPages - 4);\n    } else {\n      setCount(totalPages - 19);\n    }\n  };\n\n  const bold = (page) => {\n    //\n    //\n    //\n\n    return page == currentPage\n      ? { fontWeight: \"700\", background: \"var(--secondary-color-lightest)\" }\n      : null;\n  };\n\n  return (\n    <Container>\n      <ButtonContainer onClick={() => prev(count, changeCounter(\"prev\"))}>\n        <div>&#8592;</div> Prev\n      </ButtonContainer>\n      <ButtonContainer onClick={() => first(setCount)}>First</ButtonContainer>\n      {buttons && buttons.length > amount\n        ? buttons.slice(0, amount).map((page) => {\n            return (\n              <div key={page} className=\"hiiii\" style={{ ovderflow: \"hidden\" }}>\n                <ButtonContainer\n                  style={bold(page)}\n                  onClick={() => {\n                    jump(page);\n                    changeCounterForJump(page);\n                  }}\n                >\n                  {page}\n                </ButtonContainer>\n              </div>\n            );\n          })\n        : buttons &&\n          buttons.map((page) => {\n            return (\n              <div className=\"hiiii\" style={{ ovderflow: \"hidden\" }}>\n                <ButtonContainer\n                  style={bold(page)}\n                  onClick={() => jump(page, changeCounter())}\n                >\n                  {page}\n                </ButtonContainer>\n              </div>\n            );\n          })}\n      <ButtonContainer onClick={() => last(setCount)}>Last</ButtonContainer>\n      <ButtonContainer onClick={() => next(count, changeCounter(\"next\"))}>\n        Next\n      </ButtonContainer>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {\n    isFetching: (bool) => isFetching(bool),\n    currentPage: (page) => currentPage(page),\n  })\n)(Pagination);\n"]},"metadata":{},"sourceType":"module"}