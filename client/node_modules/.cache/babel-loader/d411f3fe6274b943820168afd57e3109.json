{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport * as actionCreators from \"./actions/index\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nimport reducers from \"./reducers/index\";\nconst middleWares = [thunk];\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"movieSuggestions\", \"castSuggestions\", \"optionActive\", \"movieSlider\", \"displayUserAdvancedSearch\", \"fetchAdvancedSearch\", \"fetchActors\", \"fetchMovies\", \"displayUserAdvancedSearch\", \"displayMovie\", \"isFetching\"]\n};\nconst persistedReducer = persistReducer(persistConfig, reducers);\nconst composeEnhancers = composeWithDevTools({\n  actionCreators,\n  trace: true,\n  traceLimit: 25\n});\nexport let store = createStore(persistedReducer, composeEnhancers(applyMiddleware(...middleWares)));\nexport let persistor = persistStore(store);","map":{"version":3,"sources":["/home/pinchas/code/projects/movie-finder/src/redux/configureStore.js"],"names":["createStore","applyMiddleware","actionCreators","persistStore","persistReducer","composeWithDevTools","thunk","storage","reducers","middleWares","persistConfig","key","blacklist","persistedReducer","composeEnhancers","trace","traceLimit","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AACjD,OAAOC,QAAP,MAAqB,kBAArB;AACA,MAAMC,WAAW,GAAG,CAACH,KAAD,CAApB;AACA,MAAMI,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBJ,EAAAA,OAFoB;AAGpBK,EAAAA,SAAS,EAAE,CACT,kBADS,EAET,iBAFS,EAGT,cAHS,EAIT,aAJS,EAKT,2BALS,EAMT,qBANS,EAOT,aAPS,EAQT,aARS,EAST,2BATS,EAUT,cAVS,EAWT,YAXS;AAHS,CAAtB;AAkBA,MAAMC,gBAAgB,GAAGT,cAAc,CAACM,aAAD,EAAgBF,QAAhB,CAAvC;AACA,MAAMM,gBAAgB,GAAGT,mBAAmB,CAAC;AAC3CH,EAAAA,cAD2C;AAE3Ca,EAAAA,KAAK,EAAE,IAFoC;AAG3CC,EAAAA,UAAU,EAAE;AAH+B,CAAD,CAA5C;AAMA,OAAO,IAAIC,KAAK,GAAGjB,WAAW,CAC5Ba,gBAD4B,EAE5BC,gBAAgB,CAACb,eAAe,CAAC,GAAGQ,WAAJ,CAAhB,CAFY,CAAvB;AAKP,OAAO,IAAIS,SAAS,GAAGf,YAAY,CAACc,KAAD,CAA5B","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport * as actionCreators from \"./actions/index\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport reducers from \"./reducers/index\";\nconst middleWares = [thunk];\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\n    \"movieSuggestions\",\n    \"castSuggestions\",\n    \"optionActive\",\n    \"movieSlider\",\n    \"displayUserAdvancedSearch\",\n    \"fetchAdvancedSearch\",\n    \"fetchActors\",\n    \"fetchMovies\",\n    \"displayUserAdvancedSearch\",\n    \"displayMovie\",\n    \"isFetching\",\n  ],\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\nconst composeEnhancers = composeWithDevTools({\n  actionCreators,\n  trace: true,\n  traceLimit: 25,\n});\n\nexport let store = createStore(\n  persistedReducer,\n  composeEnhancers(applyMiddleware(...middleWares))\n);\n\nexport let persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}