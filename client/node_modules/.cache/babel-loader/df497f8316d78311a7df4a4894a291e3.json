{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { store } from \"../configureStore\";\n\nconst fetchMoviesReducer = (request = null, action) => {\n  if (action.type === \"FETCH_MOVIES\") {\n    return action.payload;\n  }\n\n  return request;\n};\n\nconst selectedMovieIdReducer = (selectedMovieId = null, action) => {\n  if (action.type === \"MOVIE_ID_SELECTED\") {\n    return action.payload;\n  }\n\n  return selectedMovieId;\n};\n\nconst selectedMovieReducer = (selectedMovie = null, action) => {\n  if (action.type === \"MOVIE_SELECTED\") {\n    return action.payload;\n  }\n\n  return selectedMovie;\n}; // const selectedMoviesReducer = (selectedMovies = false, action) => {\n//   if (action.type === \"MOVIES_SELECTED\") {\n//\n//     return action.payload;\n//   }\n//   return selectedMovies;\n// };\n\n\nconst movieSuggestionsReducer = (movieSuggestions = false, action) => {\n  if (action.type === \"MOVIE_SUGGESTIONS\") {\n    return action.payload;\n  }\n\n  return movieSuggestions;\n};\n\nconst searchQueryReducer = (movieQuery = \"\", action) => {\n  if (action.type === \"SEARCH_QUERY\") {\n    return action.payload;\n  }\n\n  return movieQuery;\n};\n\nconst movieSliderReducer = (movieSlider = null, action) => {\n  if (action.type === \"FETCH_MOVIE_SLIDER\") {\n    return action.payload;\n  }\n\n  return movieSlider;\n};\n\nconst newestMoviesReducer = (popularToday = null, action) => {\n  if (action.type === \"FETCH_NEWEST_MOVIES\") {\n    return action.payload;\n  }\n\n  return popularToday;\n};\n\nconst highestRatedReducer = (highestRated = null, action) => {\n  if (action.type === \"FETCH_HIGHEST_RATED_MOVIES\") {\n    return action.payload;\n  }\n\n  return highestRated;\n};\n\nconst isFetchingReducer = (fetching = false, action) => {\n  if (action.type === \"IS_FETCHING\") {\n    return action.payload;\n  }\n\n  return fetching;\n};\n\nconst optionActiveReducer = (active = 1, action) => {\n  if (action.type === \"OPTION_ACTIVE\") {\n    return action.payload;\n  }\n\n  return active;\n};\n\nconst displayPageReducer = (page = 1, action) => {\n  if (action.type === \"DISPLAY_PAGE\") {\n    return action.payload;\n  }\n\n  return page;\n};\n\nconst displayMovieReducer = (movie = null, action) => {\n  if (action.type === \"DISPLAY_MOVIE\") {\n    return action.payload;\n  }\n\n  return movie;\n};\n\nconst fetchTrailersReducer = (trailers = null, action) => {\n  if (action.type === \"FETCH_TRAILERS\") {\n    return action.payload;\n  }\n\n  return trailers;\n};\n\nconst fetchTorrentsReducer = (torrents = null, action) => {\n  if (action.type === \"FETCH_TORRENTS\") {\n    return action.payload;\n  }\n\n  return torrents;\n};\n\nconst fetchSubtitlesReducer = (subtitle = null, action) => {\n  if (action.type === \"FETCH_SUBTITLES\") {\n    return action.payload;\n  }\n\n  return subtitle;\n};\n\nconst fetchMagnetsReducer = (magnets = null, action) => {\n  if (action.type === \"FETCH_MAGNETS\") {\n    return action.payload;\n  }\n\n  return magnets;\n};\n\nconst fetchGenresReducer = (genres = null, action) => {\n  if (action.type === \"FETCH_GENRES\") {\n    return action.payload;\n  }\n\n  return genres;\n};\n\nconst createAdvancedSearchReducer = (createAdvancedSearch = null, action) => {\n  if (action.type === \"CREATE_ADVANCED_SEARCH\") {\n    return action.payload;\n  }\n\n  return createAdvancedSearch;\n};\n\nconst fetchAdvancedSearchReducer = (advancedSearch = null, action) => {\n  if (action.type === \"FETCH_ADVANCED_MOVIES\") {\n    return action.payload;\n  }\n\n  return advancedSearch;\n};\n\nconst fetchCastSuggestionsReducer = (suggestions = null, action) => {\n  if (action.type === \"FETCH_CAST_SUGGESTIONS\") {\n    return action.payload;\n  }\n\n  return suggestions;\n};\n\nconst userAdvancedSearchesReducer = (savedSearches = [], action) => {\n  switch (action.type) {\n    case \"SAVE_ADVANCED_SEARCH\":\n      return [...savedSearches, action.payload];\n\n    case \"DEFAULT_ADVANCED_SEARCH\":\n      return [...savedSearches, ...action.payload];\n\n    case \"REMOVE_ADVANCED_SEARCH\":\n      return [...savedSearches].filter(search => {\n        return search !== action.payload;\n      });\n\n    default:\n      return savedSearches;\n  }\n};\n\nconst displayUserSavedSearchReducer = (displaySearch = null, action) => {\n  if (action.type === \"DISPLAY_SAVED_SEARCH\") {\n    return action.payload;\n  }\n\n  return displaySearch;\n};\n\nconst fetchActorMoviesReducer = (movies = null, action) => {\n  if (action.type === \"FETCH_ACTOR_MOVIES\") {\n    return action.payload;\n  }\n\n  return movies;\n};\n\nconst fetchPopularActorsReducer = (actors = null, action) => {\n  if (action.type === \"FETCH_POPULAR_ACTORS\") {\n    return action.payload;\n  }\n\n  return actors;\n};\n\nconst createPopularActorsReducer = (actors = null, action) => {\n  if (action.type === \"CREATE_POPULAR_ACTORS\") {\n    return action.payload;\n  }\n\n  return actors;\n};\n\nconst displayThemeReducer = (theme = \"default-theme\", action) => {\n  if (action.type === \"DISPLAY_THEME\") {\n    return action.payload;\n  }\n\n  return theme;\n};\n\nconst displaySpinnerReducer = (spinner = \"dvd\", action) => {\n  if (action.type === \"DISPLAY_SPINNER\") {\n    return action.payload;\n  }\n\n  return spinner;\n};\n\nconst isSecretSequenceReducer = (bool = false, action) => {\n  if (action.type === \"SECRET_SEQUENCE\") {\n    return action.payload;\n  }\n\n  return bool;\n};\n\nconst showSearchResultsReducer = (type = null, action) => {\n  if (action.type === \"SHOW_SEARCH_RESULTS\") {\n    return action.payload;\n  }\n\n  return type;\n};\n\nconst currentPageReducer = (page = 1, action) => {\n  if (action.type === \"CURRENT_PAGE\") {\n    return action.payload;\n  }\n\n  return page;\n};\n\nexport default combineReducers({\n  fetchMovies: fetchMoviesReducer,\n  selectedMovie: selectedMovieReducer,\n  movieSuggestions: movieSuggestionsReducer,\n  search: searchQueryReducer,\n  selectedMovieId: selectedMovieIdReducer,\n  movieSlider: movieSliderReducer,\n  newestMovies: newestMoviesReducer,\n  highestRatedMovies: highestRatedReducer,\n  optionActive: optionActiveReducer,\n  displayPage: displayPageReducer,\n  displayMovie: displayMovieReducer,\n  trailers: fetchTrailersReducer,\n  fetchTorrents: fetchTorrentsReducer,\n  fetchSubtitles: fetchSubtitlesReducer,\n  fetchMagnets: fetchMagnetsReducer,\n  genres: fetchGenresReducer,\n  advancedSearch: createAdvancedSearchReducer,\n  fetchAdvancedSearch: fetchAdvancedSearchReducer,\n  castSuggestions: fetchCastSuggestionsReducer,\n  userAdvancedSearches: userAdvancedSearchesReducer,\n  displayUserAdvancedSearch: displayUserSavedSearchReducer,\n  fetchActorMovies: fetchActorMoviesReducer,\n  fetchPopularActors: fetchPopularActorsReducer,\n  createPopularActors: createPopularActorsReducer,\n  isFetching: isFetchingReducer,\n  displayTheme: displayThemeReducer,\n  displaySpinner: displaySpinnerReducer,\n  isSecretSequence: isSecretSequenceReducer,\n  showSearchResults: showSearchResultsReducer,\n  currentPage: currentPageReducer\n});","map":{"version":3,"sources":["/home/pinchas/code/projects/movie-finder/src/redux/reducers/index.js"],"names":["combineReducers","store","fetchMoviesReducer","request","action","type","payload","selectedMovieIdReducer","selectedMovieId","selectedMovieReducer","selectedMovie","movieSuggestionsReducer","movieSuggestions","searchQueryReducer","movieQuery","movieSliderReducer","movieSlider","newestMoviesReducer","popularToday","highestRatedReducer","highestRated","isFetchingReducer","fetching","optionActiveReducer","active","displayPageReducer","page","displayMovieReducer","movie","fetchTrailersReducer","trailers","fetchTorrentsReducer","torrents","fetchSubtitlesReducer","subtitle","fetchMagnetsReducer","magnets","fetchGenresReducer","genres","createAdvancedSearchReducer","createAdvancedSearch","fetchAdvancedSearchReducer","advancedSearch","fetchCastSuggestionsReducer","suggestions","userAdvancedSearchesReducer","savedSearches","filter","search","displayUserSavedSearchReducer","displaySearch","fetchActorMoviesReducer","movies","fetchPopularActorsReducer","actors","createPopularActorsReducer","displayThemeReducer","theme","displaySpinnerReducer","spinner","isSecretSequenceReducer","bool","showSearchResultsReducer","currentPageReducer","fetchMovies","newestMovies","highestRatedMovies","optionActive","displayPage","displayMovie","fetchTorrents","fetchSubtitles","fetchMagnets","fetchAdvancedSearch","castSuggestions","userAdvancedSearches","displayUserAdvancedSearch","fetchActorMovies","fetchPopularActors","createPopularActors","isFetching","displayTheme","displaySpinner","isSecretSequence","showSearchResults","currentPage"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\";\nimport { store } from \"../configureStore\";\n\nconst fetchMoviesReducer = (request = null, action) => {\n  if (action.type === \"FETCH_MOVIES\") {\n    return action.payload;\n  }\n  return request;\n};\nconst selectedMovieIdReducer = (selectedMovieId = null, action) => {\n  if (action.type === \"MOVIE_ID_SELECTED\") {\n    return action.payload;\n  }\n  return selectedMovieId;\n};\nconst selectedMovieReducer = (selectedMovie = null, action) => {\n  if (action.type === \"MOVIE_SELECTED\") {\n    return action.payload;\n  }\n  return selectedMovie;\n};\n\n// const selectedMoviesReducer = (selectedMovies = false, action) => {\n//   if (action.type === \"MOVIES_SELECTED\") {\n//\n//     return action.payload;\n//   }\n//   return selectedMovies;\n// };\n\nconst movieSuggestionsReducer = (movieSuggestions = false, action) => {\n  if (action.type === \"MOVIE_SUGGESTIONS\") {\n    return action.payload;\n  }\n  return movieSuggestions;\n};\n\nconst searchQueryReducer = (movieQuery = \"\", action) => {\n  if (action.type === \"SEARCH_QUERY\") {\n    return action.payload;\n  }\n  return movieQuery;\n};\n\nconst movieSliderReducer = (movieSlider = null, action) => {\n  if (action.type === \"FETCH_MOVIE_SLIDER\") {\n    return action.payload;\n  }\n  return movieSlider;\n};\n\nconst newestMoviesReducer = (popularToday = null, action) => {\n  if (action.type === \"FETCH_NEWEST_MOVIES\") {\n    return action.payload;\n  }\n  return popularToday;\n};\nconst highestRatedReducer = (highestRated = null, action) => {\n  if (action.type === \"FETCH_HIGHEST_RATED_MOVIES\") {\n    return action.payload;\n  }\n  return highestRated;\n};\n\nconst isFetchingReducer = (fetching = false, action) => {\n  if (action.type === \"IS_FETCHING\") {\n    return action.payload;\n  }\n  return fetching;\n};\n\nconst optionActiveReducer = (active = 1, action) => {\n  if (action.type === \"OPTION_ACTIVE\") {\n    return action.payload;\n  }\n  return active;\n};\n\nconst displayPageReducer = (page = 1, action) => {\n  if (action.type === \"DISPLAY_PAGE\") {\n    return action.payload;\n  }\n  return page;\n};\n\nconst displayMovieReducer = (movie = null, action) => {\n  if (action.type === \"DISPLAY_MOVIE\") {\n    return action.payload;\n  }\n  return movie;\n};\nconst fetchTrailersReducer = (trailers = null, action) => {\n  if (action.type === \"FETCH_TRAILERS\") {\n    return action.payload;\n  }\n  return trailers;\n};\n\nconst fetchTorrentsReducer = (torrents = null, action) => {\n  if (action.type === \"FETCH_TORRENTS\") {\n    return action.payload;\n  }\n  return torrents;\n};\nconst fetchSubtitlesReducer = (subtitle = null, action) => {\n  if (action.type === \"FETCH_SUBTITLES\") {\n    return action.payload;\n  }\n  return subtitle;\n};\n\nconst fetchMagnetsReducer = (magnets = null, action) => {\n  if (action.type === \"FETCH_MAGNETS\") {\n    return action.payload;\n  }\n  return magnets;\n};\n\nconst fetchGenresReducer = (genres = null, action) => {\n  if (action.type === \"FETCH_GENRES\") {\n    return action.payload;\n  }\n  return genres;\n};\n\nconst createAdvancedSearchReducer = (createAdvancedSearch = null, action) => {\n  if (action.type === \"CREATE_ADVANCED_SEARCH\") {\n    return action.payload;\n  }\n  return createAdvancedSearch;\n};\n\nconst fetchAdvancedSearchReducer = (advancedSearch = null, action) => {\n  if (action.type === \"FETCH_ADVANCED_MOVIES\") {\n    return action.payload;\n  }\n  return advancedSearch;\n};\n\nconst fetchCastSuggestionsReducer = (suggestions = null, action) => {\n  if (action.type === \"FETCH_CAST_SUGGESTIONS\") {\n    return action.payload;\n  }\n  return suggestions;\n};\n\nconst userAdvancedSearchesReducer = (savedSearches = [], action) => {\n  switch (action.type) {\n    case \"SAVE_ADVANCED_SEARCH\":\n      return [...savedSearches, action.payload];\n    case \"DEFAULT_ADVANCED_SEARCH\":\n      return [...savedSearches, ...action.payload];\n    case \"REMOVE_ADVANCED_SEARCH\":\n      return [...savedSearches].filter((search) => {\n        return search !== action.payload;\n      });\n    default:\n      return savedSearches;\n  }\n};\n\nconst displayUserSavedSearchReducer = (displaySearch = null, action) => {\n  if (action.type === \"DISPLAY_SAVED_SEARCH\") {\n    return action.payload;\n  }\n  return displaySearch;\n};\n\nconst fetchActorMoviesReducer = (movies = null, action) => {\n  if (action.type === \"FETCH_ACTOR_MOVIES\") {\n    return action.payload;\n  }\n  return movies;\n};\nconst fetchPopularActorsReducer = (actors = null, action) => {\n  if (action.type === \"FETCH_POPULAR_ACTORS\") {\n    return action.payload;\n  }\n  return actors;\n};\nconst createPopularActorsReducer = (actors = null, action) => {\n  if (action.type === \"CREATE_POPULAR_ACTORS\") {\n    return action.payload;\n  }\n  return actors;\n};\n\nconst displayThemeReducer = (theme = \"default-theme\", action) => {\n  if (action.type === \"DISPLAY_THEME\") {\n    return action.payload;\n  }\n  return theme;\n};\nconst displaySpinnerReducer = (spinner = \"dvd\", action) => {\n  if (action.type === \"DISPLAY_SPINNER\") {\n    return action.payload;\n  }\n  return spinner;\n};\n\nconst isSecretSequenceReducer = (bool = false, action) => {\n  if (action.type === \"SECRET_SEQUENCE\") {\n    return action.payload;\n  }\n  return bool;\n};\n\nconst showSearchResultsReducer = (type = null, action) => {\n  if (action.type === \"SHOW_SEARCH_RESULTS\") {\n    return action.payload;\n  }\n  return type;\n};\nconst currentPageReducer = (page = 1, action) => {\n  if (action.type === \"CURRENT_PAGE\") {\n    return action.payload;\n  }\n  return page;\n};\n\nexport default combineReducers({\n  fetchMovies: fetchMoviesReducer,\n  selectedMovie: selectedMovieReducer,\n  movieSuggestions: movieSuggestionsReducer,\n  search: searchQueryReducer,\n  selectedMovieId: selectedMovieIdReducer,\n  movieSlider: movieSliderReducer,\n  newestMovies: newestMoviesReducer,\n  highestRatedMovies: highestRatedReducer,\n  optionActive: optionActiveReducer,\n  displayPage: displayPageReducer,\n  displayMovie: displayMovieReducer,\n  trailers: fetchTrailersReducer,\n  fetchTorrents: fetchTorrentsReducer,\n  fetchSubtitles: fetchSubtitlesReducer,\n  fetchMagnets: fetchMagnetsReducer,\n  genres: fetchGenresReducer,\n  advancedSearch: createAdvancedSearchReducer,\n  fetchAdvancedSearch: fetchAdvancedSearchReducer,\n  castSuggestions: fetchCastSuggestionsReducer,\n  userAdvancedSearches: userAdvancedSearchesReducer,\n  displayUserAdvancedSearch: displayUserSavedSearchReducer,\n  fetchActorMovies: fetchActorMoviesReducer,\n  fetchPopularActors: fetchPopularActorsReducer,\n  createPopularActors: createPopularActorsReducer,\n  isFetching: isFetchingReducer,\n  displayTheme: displayThemeReducer,\n  displaySpinner: displaySpinnerReducer,\n  isSecretSequence: isSecretSequenceReducer,\n  showSearchResults: showSearchResultsReducer,\n  currentPage: currentPageReducer,\n});\n"]},"metadata":{},"sourceType":"module"}