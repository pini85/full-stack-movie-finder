{"ast":null,"code":"var _jsxFileName = \"/home/pinchas/code/projects/movie-finder/src/components/PopularActors/PopularActors.component.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Papa from \"papaparse\";\nimport { createPopularActors, fetchPopularActors } from \"../../redux/actions/index\";\nimport CategoryTitle from \"../CategoryTitle/CategoryTitle.component\";\nimport DisplayPopularActors from \"../DisplayPopularActors/DisplayPopularActors.component\";\n\nconst PopularActors = props => {\n  useEffect(() => {\n    const actors = data => {\n      let actors = {};\n      let names = [];\n      const actorsPerPage = 10;\n      const totalPages = data && Math.round(data.length / actorsPerPage);\n      actors.total_pages = totalPages;\n      actors.total_results = data && data.length;\n\n      for (let index in data) {\n        names.push(data[index][0]);\n      }\n\n      let pageNumber = 1;\n\n      for (let j = 1; j < names.length; j += actorsPerPage) {\n        actors[pageNumber] = names.slice(j, j + 10);\n        pageNumber++;\n      }\n\n      if (Object.keys(actors).length > 0 && actors.total_pages) {\n        props.createPopularActors(actors);\n        props.fetchPopularActors(1);\n      }\n    };\n\n    actors();\n\n    const parseData = (url, callBack) => {\n      Papa.parse(url, {\n        download: true,\n        dynamicTyping: true,\n        complete: results => {\n          callBack(results.data);\n        }\n      });\n    };\n\n    parseData(\"https://raw.githubusercontent.com/data-8/tutor/master/Week2/actors.csv\", actors);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CategoryTitle, {\n    title: \"popular actors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), props.fetchPopularActorsData && /*#__PURE__*/React.createElement(DisplayPopularActors, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 40\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  fetchPopularActorsData: state.fetchPopularActors\n});\n\nexport default connect(mapStateToProps, {\n  createPopularActors: actors => createPopularActors(actors),\n  fetchPopularActors: page => fetchPopularActors(page)\n})(PopularActors);","map":{"version":3,"sources":["/home/pinchas/code/projects/movie-finder/src/components/PopularActors/PopularActors.component.jsx"],"names":["React","useEffect","useState","connect","Papa","createPopularActors","fetchPopularActors","CategoryTitle","DisplayPopularActors","PopularActors","props","actors","data","names","actorsPerPage","totalPages","Math","round","length","total_pages","total_results","index","push","pageNumber","j","slice","Object","keys","parseData","url","callBack","parse","download","dynamicTyping","complete","results","fetchPopularActorsData","mapStateToProps","state","page"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SACEC,mBADF,EAEEC,kBAFF,QAGO,2BAHP;AAIA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,oBAAP,MAAiC,wDAAjC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/BT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,MAAM,GAAIC,IAAD,IAAU;AACvB,UAAID,MAAM,GAAG,EAAb;AACA,UAAIE,KAAK,GAAG,EAAZ;AACA,YAAMC,aAAa,GAAG,EAAtB;AACA,YAAMC,UAAU,GAAGH,IAAI,IAAII,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACM,MAAL,GAAcJ,aAAzB,CAA3B;AACAH,MAAAA,MAAM,CAACQ,WAAP,GAAqBJ,UAArB;AACAJ,MAAAA,MAAM,CAACS,aAAP,GAAuBR,IAAI,IAAIA,IAAI,CAACM,MAApC;;AAEA,WAAK,IAAIG,KAAT,IAAkBT,IAAlB,EAAwB;AACtBC,QAAAA,KAAK,CAACS,IAAN,CAAWV,IAAI,CAACS,KAAD,CAAJ,CAAY,CAAZ,CAAX;AACD;;AACD,UAAIE,UAAU,GAAG,CAAjB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,KAAK,CAACK,MAA1B,EAAkCM,CAAC,IAAIV,aAAvC,EAAsD;AACpDH,QAAAA,MAAM,CAACY,UAAD,CAAN,GAAqBV,KAAK,CAACY,KAAN,CAAYD,CAAZ,EAAeA,CAAC,GAAG,EAAnB,CAArB;AACAD,QAAAA,UAAU;AACX;;AAED,UAAIG,MAAM,CAACC,IAAP,CAAYhB,MAAZ,EAAoBO,MAApB,GAA6B,CAA7B,IAAkCP,MAAM,CAACQ,WAA7C,EAA0D;AACxDT,QAAAA,KAAK,CAACL,mBAAN,CAA0BM,MAA1B;AACAD,QAAAA,KAAK,CAACJ,kBAAN,CAAyB,CAAzB;AACD;AACF,KArBD;;AAuBAK,IAAAA,MAAM;;AACN,UAAMiB,SAAS,GAAG,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACnC1B,MAAAA,IAAI,CAAC2B,KAAL,CAAWF,GAAX,EAAgB;AACdG,QAAAA,QAAQ,EAAE,IADI;AAEdC,QAAAA,aAAa,EAAE,IAFD;AAGdC,QAAAA,QAAQ,EAAGC,OAAD,IAAa;AACrBL,UAAAA,QAAQ,CAACK,OAAO,CAACvB,IAAT,CAAR;AACD;AALa,OAAhB;AAOD,KARD;;AASAgB,IAAAA,SAAS,CACP,wEADO,EAEPjB,MAFO,CAAT;AAID,GAtCQ,EAsCN,EAtCM,CAAT;AAwCA,sBACE,uDACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGD,KAAK,CAAC0B,sBAAN,iBAAgC,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFnC,CADF;AAMD,CA/CD;;AAgDA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCF,EAAAA,sBAAsB,EAAEE,KAAK,CAAChC;AADI,CAAZ,CAAxB;;AAGA,eAAeH,OAAO,CAACkC,eAAD,EAAkB;AACtChC,EAAAA,mBAAmB,EAAGM,MAAD,IAAYN,mBAAmB,CAACM,MAAD,CADd;AAEtCL,EAAAA,kBAAkB,EAAGiC,IAAD,IAAUjC,kBAAkB,CAACiC,IAAD;AAFV,CAAlB,CAAP,CAGZ9B,aAHY,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Papa from \"papaparse\";\nimport {\n  createPopularActors,\n  fetchPopularActors,\n} from \"../../redux/actions/index\";\nimport CategoryTitle from \"../CategoryTitle/CategoryTitle.component\";\nimport DisplayPopularActors from \"../DisplayPopularActors/DisplayPopularActors.component\";\n\nconst PopularActors = (props) => {\n  useEffect(() => {\n    const actors = (data) => {\n      let actors = {};\n      let names = [];\n      const actorsPerPage = 10;\n      const totalPages = data && Math.round(data.length / actorsPerPage);\n      actors.total_pages = totalPages;\n      actors.total_results = data && data.length;\n\n      for (let index in data) {\n        names.push(data[index][0]);\n      }\n      let pageNumber = 1;\n      for (let j = 1; j < names.length; j += actorsPerPage) {\n        actors[pageNumber] = names.slice(j, j + 10);\n        pageNumber++;\n      }\n\n      if (Object.keys(actors).length > 0 && actors.total_pages) {\n        props.createPopularActors(actors);\n        props.fetchPopularActors(1);\n      }\n    };\n\n    actors();\n    const parseData = (url, callBack) => {\n      Papa.parse(url, {\n        download: true,\n        dynamicTyping: true,\n        complete: (results) => {\n          callBack(results.data);\n        },\n      });\n    };\n    parseData(\n      \"https://raw.githubusercontent.com/data-8/tutor/master/Week2/actors.csv\",\n      actors\n    );\n  }, []);\n\n  return (\n    <>\n      <CategoryTitle title=\"popular actors\" />\n      {props.fetchPopularActorsData && <DisplayPopularActors />}\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  fetchPopularActorsData: state.fetchPopularActors,\n});\nexport default connect(mapStateToProps, {\n  createPopularActors: (actors) => createPopularActors(actors),\n  fetchPopularActors: (page) => fetchPopularActors(page),\n})(PopularActors);\n"]},"metadata":{},"sourceType":"module"}