{"ast":null,"code":"var _jsxFileName = \"/home/pinchas/code/projects/movie-finder/src/components/Suggestions/Suggestions.component.jsx\";\nimport React from \"react\";\nimport Suggestion from \"../Suggestion/Suggestion\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"./suggestions.styles\";\n\nconst Suggestions = props => {\n  const suggestions = () => {\n    const array = [];\n    const cast = props.castSuggestions.slice(0, 2);\n    array.push(...cast);\n    console.log(array);\n  };\n\n  suggestions();\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, props.userSuggestions && props.userSuggestions.results.splice(0, 6).map(suggestion => {\n    return /*#__PURE__*/React.createElement(Suggestion, {\n      key: suggestion.id,\n      item: suggestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 18\n      }\n    });\n  }));\n};\n\nconst mapStateToProps = state => ({\n  movieSuggestions: state.movieSuggestions,\n  castSuggestions: state.castSuggestions\n});\n\nexport default connect(mapStateToProps)(Suggestions);","map":{"version":3,"sources":["/home/pinchas/code/projects/movie-finder/src/components/Suggestions/Suggestions.component.jsx"],"names":["React","Suggestion","connect","Container","Suggestions","props","suggestions","array","cast","castSuggestions","slice","push","console","log","userSuggestions","results","splice","map","suggestion","id","mapStateToProps","state","movieSuggestions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,IAAI,GAAGH,KAAK,CAACI,eAAN,CAAsBC,KAAtB,CAA4B,CAA5B,EAA+B,CAA/B,CAAb;AACAH,IAAAA,KAAK,CAACI,IAAN,CAAW,GAAGH,IAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACD,GALD;;AAMAD,EAAAA,WAAW;AACX,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACS,eAAN,IACCT,KAAK,CAACS,eAAN,CAAsBC,OAAtB,CAA8BC,MAA9B,CAAqC,CAArC,EAAwC,CAAxC,EAA2CC,GAA3C,CAAgDC,UAAD,IAAgB;AAC7D,wBAAO,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,UAAU,CAACC,EAA5B;AAAgC,MAAA,IAAI,EAAED,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CAFJ,CADF;AAQD,CAhBD;;AAiBA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,gBAAgB,EAAED,KAAK,CAACC,gBADU;AAElCb,EAAAA,eAAe,EAAEY,KAAK,CAACZ;AAFW,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACkB,eAAD,CAAP,CAAyBhB,WAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport Suggestion from \"../Suggestion/Suggestion\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"./suggestions.styles\";\n\nconst Suggestions = (props) => {\n  const suggestions = () => {\n    const array = [];\n    const cast = props.castSuggestions.slice(0, 2);\n    array.push(...cast);\n    console.log(array);\n  };\n  suggestions();\n  return (\n    <Container>\n      {props.userSuggestions &&\n        props.userSuggestions.results.splice(0, 6).map((suggestion) => {\n          return <Suggestion key={suggestion.id} item={suggestion} />;\n        })}\n    </Container>\n  );\n};\nconst mapStateToProps = (state) => ({\n  movieSuggestions: state.movieSuggestions,\n  castSuggestions: state.castSuggestions,\n});\nexport default connect(mapStateToProps)(Suggestions);\n"]},"metadata":{},"sourceType":"module"}