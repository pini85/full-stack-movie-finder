{"ast":null,"code":"var _jsxFileName = \"/home/pinchas/code/projects/movie-finder/src/components/Suggestions/Suggestions.component.jsx\";\nimport React from \"react\";\nimport Suggestion from \"../Suggestion/Suggestion\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"./suggestions.styles\";\n\nconst Suggestions = props => {\n  const suggestions = () => {\n    if (props.castSuggestions) {\n      const array = [];\n      const cast = props.castSuggestions.slice(0, 2);\n      const movies = props.movieSuggestions.results.slice(0, 4);\n      array.push(...cast, ...movies);\n      return array;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, suggestions() && suggestions().map(suggestion => {\n    return /*#__PURE__*/React.createElement(Suggestion, {\n      key: suggestion.id,\n      item: suggestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 18\n      }\n    });\n  }));\n};\n\nconst mapStateToProps = state => ({\n  movieSuggestions: state.movieSuggestions,\n  castSuggestions: state.castSuggestions\n});\n\nexport default connect(mapStateToProps)(Suggestions);","map":{"version":3,"sources":["/home/pinchas/code/projects/movie-finder/src/components/Suggestions/Suggestions.component.jsx"],"names":["React","Suggestion","connect","Container","Suggestions","props","suggestions","castSuggestions","array","cast","slice","movies","movieSuggestions","results","push","map","suggestion","id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAID,KAAK,CAACE,eAAV,EAA2B;AACzB,YAAMC,KAAK,GAAG,EAAd;AACA,YAAMC,IAAI,GAAGJ,KAAK,CAACE,eAAN,CAAsBG,KAAtB,CAA4B,CAA5B,EAA+B,CAA/B,CAAb;AAEA,YAAMC,MAAM,GAAGN,KAAK,CAACO,gBAAN,CAAuBC,OAAvB,CAA+BH,KAA/B,CAAqC,CAArC,EAAwC,CAAxC,CAAf;AACAF,MAAAA,KAAK,CAACM,IAAN,CAAW,GAAGL,IAAd,EAAoB,GAAGE,MAAvB;AAEA,aAAOH,KAAP;AACD;AACF,GAVD;;AAYA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,WAAW,MACVA,WAAW,GAAGS,GAAd,CAAmBC,UAAD,IAAgB;AAChC,wBAAO,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,UAAU,CAACC,EAA5B;AAAgC,MAAA,IAAI,EAAED,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CAFJ,CADF;AAQD,CArBD;;AAsBA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCP,EAAAA,gBAAgB,EAAEO,KAAK,CAACP,gBADU;AAElCL,EAAAA,eAAe,EAAEY,KAAK,CAACZ;AAFW,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACgB,eAAD,CAAP,CAAyBd,WAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport Suggestion from \"../Suggestion/Suggestion\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"./suggestions.styles\";\n\nconst Suggestions = (props) => {\n  const suggestions = () => {\n    if (props.castSuggestions) {\n      const array = [];\n      const cast = props.castSuggestions.slice(0, 2);\n\n      const movies = props.movieSuggestions.results.slice(0, 4);\n      array.push(...cast, ...movies);\n\n      return array;\n    }\n  };\n\n  return (\n    <Container>\n      {suggestions() &&\n        suggestions().map((suggestion) => {\n          return <Suggestion key={suggestion.id} item={suggestion} />;\n        })}\n    </Container>\n  );\n};\nconst mapStateToProps = (state) => ({\n  movieSuggestions: state.movieSuggestions,\n  castSuggestions: state.castSuggestions,\n});\nexport default connect(mapStateToProps)(Suggestions);\n"]},"metadata":{},"sourceType":"module"}