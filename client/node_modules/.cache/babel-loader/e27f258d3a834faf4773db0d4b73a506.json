{"ast":null,"code":"var _jsxFileName = \"/home/pinchas/code/projects/movie-finder/src/components/showMovieInfo/ShowMovieInfo.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./styles.css\";\nimport CirclePercentage from \"../CirclePercentage/CirclePercentage.component\";\nimport styled from \"styled-components\";\nconst Container = styled.div`\n  color: ${props => props.color};\n  background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));\n  text-align: center;\n  height: fit-content;\n  margin-top: 3rem;\n  border-radius: 8px;\n  padding: 2rem 4rem;\n  color: ${props => props.color};\n  @media screen and (max-width: 500px) {\n    padding: 2rem 4rem 1rem 4rem;\n    width: 100vw;\n  }\n`;\nconst TitleContainer = styled.div`\n  font-weight: 700;\n  font-size: var(--heading-secondary);\n`;\nconst GenreContainer = styled.div`\n  font-size: 1.7rem;\n`;\nconst YearContainer = styled.div`\n  font-size: var(--paragraph);\n`;\nconst ReviewContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 1rem;\n  margin-bottom: 2rem;\n`;\nconst ReviewItem = styled.div`\n  margin: 0.5rem 1rem 0rem 1rem;\n  color: ${props => props.color};\n  font-weight: 700;\n  background: rgba(0, 0, 0, 0.3);\n  padding: 5px;\n  height: 6rem;\n  width: 8rem;\n  border-radius: 10px;\n`;\nconst Image = styled.img`\n  height: 2rem;\n  width: 3rem;\n  filter: opacity(0.5);\n`;\nconst CircleRating = styled.div`\n  position: relative;\n  background: yellow;\n  height: 5rem;\n  width: 5rem;\n  border-radius: 50%;\n  z-index: 2;\n  &::before {\n    position: absolute;\n    content: \"\";\n    top: 5%;\n    left: 5%;\n    height: 200%;\n    width: 200%;\n    z-index: 1;\n\n    background: red;\n  }\n`;\nconst ReviewValueContainer = styled.div`\n  font-size: 1.5rem;\n`;\n\nconst ShowMovieInfo = ({\n  colors,\n  movie\n}) => {\n  return /*#__PURE__*/React.createElement(Container, {\n    color: colors.lightVibrant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TitleContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, movie.title, \" (\", movie.year, \")\"), /*#__PURE__*/React.createElement(GenreContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, movie.genre, \"\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"|\"), \"\\xA0\", movie.runTime, \"min \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 28\n    }\n  }, \"|\"), \"\\xA0\", movie.language), /*#__PURE__*/React.createElement(ReviewContainer, {\n    color: colors.vibrant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, movie.ratings && movie.ratings.map(rate => {\n    console.log(rate);\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: rate.url,\n      target: \"blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ReviewItem, {\n      color: colors.vibrant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: rate.img,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ReviewValueContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, rate.rating ? rate.rating.Value : rate.imdb.Value)));\n  }), /*#__PURE__*/React.createElement(CirclePercentage, {\n    rating: movie.tmdbRating * 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapsTateToProps = state => ({\n  movie: state.displayMovie,\n  colors: state.displayMovie.colors\n});\n\nexport default connect(mapsTateToProps)(ShowMovieInfo);","map":{"version":3,"sources":["/home/pinchas/code/projects/movie-finder/src/components/showMovieInfo/ShowMovieInfo.component.jsx"],"names":["React","connect","CirclePercentage","styled","Container","div","props","color","TitleContainer","GenreContainer","YearContainer","ReviewContainer","ReviewItem","Image","img","CircleRating","ReviewValueContainer","ShowMovieInfo","colors","movie","lightVibrant","title","year","genre","runTime","language","vibrant","ratings","map","rate","console","log","url","rating","Value","imdb","tmdbRating","mapsTateToProps","state","displayMovie"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./styles.css\";\nimport CirclePercentage from \"../CirclePercentage/CirclePercentage.component\";\n\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  color: ${(props) => props.color};\n  background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));\n  text-align: center;\n  height: fit-content;\n  margin-top: 3rem;\n  border-radius: 8px;\n  padding: 2rem 4rem;\n  color: ${(props) => props.color};\n  @media screen and (max-width: 500px) {\n    padding: 2rem 4rem 1rem 4rem;\n    width: 100vw;\n  }\n`;\n\nconst TitleContainer = styled.div`\n  font-weight: 700;\n  font-size: var(--heading-secondary);\n`;\n\nconst GenreContainer = styled.div`\n  font-size: 1.7rem;\n`;\nconst YearContainer = styled.div`\n  font-size: var(--paragraph);\n`;\n\nconst ReviewContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 1rem;\n  margin-bottom: 2rem;\n`;\n\nconst ReviewItem = styled.div`\n  margin: 0.5rem 1rem 0rem 1rem;\n  color: ${(props) => props.color};\n  font-weight: 700;\n  background: rgba(0, 0, 0, 0.3);\n  padding: 5px;\n  height: 6rem;\n  width: 8rem;\n  border-radius: 10px;\n`;\n\nconst Image = styled.img`\n  height: 2rem;\n  width: 3rem;\n  filter: opacity(0.5);\n`;\n\nconst CircleRating = styled.div`\n  position: relative;\n  background: yellow;\n  height: 5rem;\n  width: 5rem;\n  border-radius: 50%;\n  z-index: 2;\n  &::before {\n    position: absolute;\n    content: \"\";\n    top: 5%;\n    left: 5%;\n    height: 200%;\n    width: 200%;\n    z-index: 1;\n\n    background: red;\n  }\n`;\nconst ReviewValueContainer = styled.div`\n  font-size: 1.5rem;\n`;\nconst ShowMovieInfo = ({ colors, movie }) => {\n  return (\n    <Container color={colors.lightVibrant}>\n      <TitleContainer>\n        {movie.title} ({movie.year})\n      </TitleContainer>\n      <GenreContainer>\n        {movie.genre}\n        &nbsp;<span>&#124;</span>&nbsp;\n        {movie.runTime}min <span>&#124;</span>&nbsp;\n        {movie.language}\n      </GenreContainer>\n\n      <ReviewContainer color={colors.vibrant}>\n        {movie.ratings &&\n          movie.ratings.map((rate) => {\n            console.log(rate);\n\n            return (\n              <a href={rate.url} target=\"blank\">\n                <ReviewItem color={colors.vibrant}>\n                  <Image src={rate.img} alt=\"\" />\n                  <ReviewValueContainer>\n                    {rate.rating ? rate.rating.Value : rate.imdb.Value}\n                  </ReviewValueContainer>\n                </ReviewItem>\n              </a>\n            );\n          })}\n        <CirclePercentage rating={movie.tmdbRating * 10} />\n      </ReviewContainer>\n    </Container>\n  );\n};\n\nconst mapsTateToProps = (state) => ({\n  movie: state.displayMovie,\n  colors: state.displayMovie.colors,\n});\n\nexport default connect(mapsTateToProps)(ShowMovieInfo);\n"]},"metadata":{},"sourceType":"module"}