{"ast":null,"code":"var _jsxFileName = \"/home/pinchas/code/projects/movie-finder/src/components/MovieListCategory/MovieListCategory.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectedMovie, fetchMovies, fetchNewestMovies, fetchHighestRatedMovies, isFetching } from \"../../redux/actions/index\";\nimport { Container } from \"./movieListCategory.styles\";\nimport Card from \"../card/Card\";\n\nconst MovieListCategory = props => {\n  useEffect(() => {\n    const fetchData = async () => {\n      switch (props.category) {\n        case \"newest movies\":\n          await props.newestMovies(1);\n          props.isFetching(false);\n          break;\n\n        case \"highest rating\":\n          props.highestRatedMovies(1);\n          props.isFetching(false);\n          break;\n\n        default:\n          return null;\n      }\n    };\n\n    fetchData();\n  }, [props.category]);\n\n  const iterate = category => {\n    return category && category.results.map(item => {\n      if (item === null) {\n        return;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        movie: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }));\n    });\n  };\n\n  const displayCategory = () => {\n    switch (props.category) {\n      case \"newest movies\":\n        return iterate(props.newestMoviesData);\n\n      case \"highest rating\":\n        return iterate(props.highestRatedMoviesData);\n\n      default:\n        return null;\n    }\n  };\n\n  const styleDiv = {\n    display: \"flex\",\n    flexdirection: \"column\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    background: \"var(--secondary-color)\"\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      background: \"var(--secondary-color)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"0 auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, displayCategory()), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"0 auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  })) //\n  ;\n};\n\nconst mapStateToProps = state => ({\n  fetchMoviesData: state.fetchMovies,\n  optionActive: state.optionActive,\n  newestMoviesData: state.newestMovies,\n  highestRatedMoviesData: state.highestRatedMovies,\n  movieSliderData: state.movieSliderData\n});\n\nexport default connect(mapStateToProps, {\n  selectedMovie: selectedMovie,\n  fetchMovies: page => fetchMovies(page),\n  isFetching: bool => isFetching(bool),\n  newestMovies: page => fetchNewestMovies(page),\n  highestRatedMovies: page => fetchHighestRatedMovies(page)\n})(MovieListCategory);","map":{"version":3,"sources":["/home/pinchas/code/projects/movie-finder/src/components/MovieListCategory/MovieListCategory.component.jsx"],"names":["React","useEffect","connect","selectedMovie","fetchMovies","fetchNewestMovies","fetchHighestRatedMovies","isFetching","Container","Card","MovieListCategory","props","fetchData","category","newestMovies","highestRatedMovies","iterate","results","map","item","id","displayCategory","newestMoviesData","highestRatedMoviesData","styleDiv","display","flexdirection","flexWrap","justifyContent","alignContent","background","margin","mapStateToProps","state","fetchMoviesData","optionActive","movieSliderData","page","bool"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  selectedMovie,\n  fetchMovies,\n  fetchNewestMovies,\n  fetchHighestRatedMovies,\n  isFetching,\n} from \"../../redux/actions/index\";\nimport { Container } from \"./movieListCategory.styles\";\n\nimport Card from \"../card/Card\";\nconst MovieListCategory = (props) => {\n  useEffect(() => {\n    const fetchData = async () => {\n      switch (props.category) {\n        case \"newest movies\":\n          await props.newestMovies(1);\n          props.isFetching(false);\n          break;\n        case \"highest rating\":\n          props.highestRatedMovies(1);\n          props.isFetching(false);\n          break;\n        default:\n          return null;\n      }\n    };\n    fetchData();\n  }, [props.category]);\n\n  const iterate = (category) => {\n    return (\n      category &&\n      category.results.map((item) => {\n        if (item === null) {\n          return;\n        }\n\n        return (\n          <div key={item.id}>\n            <Card movie={item}></Card>\n          </div>\n        );\n      })\n    );\n  };\n\n  const displayCategory = () => {\n    switch (props.category) {\n      case \"newest movies\":\n        return iterate(props.newestMoviesData);\n      case \"highest rating\":\n        return iterate(props.highestRatedMoviesData);\n      default:\n        return null;\n    }\n  };\n\n  const styleDiv = {\n    display: \"flex\",\n    flexdirection: \"column\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    background: \"var(--secondary-color)\",\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          background: \"var(--secondary-color)\",\n        }}\n      >\n        <div style={{ margin: \"0 auto\" }}></div>\n      </div>\n      <Container>{displayCategory()}</Container>\n      <div style={{ margin: \"0 auto\" }}></div>\n    </>\n    //\n  );\n};\nconst mapStateToProps = (state) => ({\n  fetchMoviesData: state.fetchMovies,\n\n  optionActive: state.optionActive,\n  newestMoviesData: state.newestMovies,\n  highestRatedMoviesData: state.highestRatedMovies,\n  movieSliderData: state.movieSliderData,\n});\nexport default connect(mapStateToProps, {\n  selectedMovie: selectedMovie,\n  fetchMovies: (page) => fetchMovies(page),\n  isFetching: (bool) => isFetching(bool),\n\n  newestMovies: (page) => fetchNewestMovies(page),\n  highestRatedMovies: (page) => fetchHighestRatedMovies(page),\n})(MovieListCategory);\n"]},"metadata":{},"sourceType":"module"}