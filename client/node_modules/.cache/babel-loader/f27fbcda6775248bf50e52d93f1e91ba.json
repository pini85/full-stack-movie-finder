{"ast":null,"code":"var _jsxFileName = \"/home/pinchas/code/projects/movie-finder/src/components/Search/Search.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { search, fetchMovies, movieSuggestions, showSearchResults } from \"../../redux/actions\";\nimport { tmdbQueryApi } from \"../../apis/tmdbApi\";\nimport Suggestions from \"../Suggestions/Suggestions.component\";\nimport Button from \"../Button/Button\";\nimport Input from \"../Input/Input.component\";\nimport useDidUpdateEffect from \"../../hooks/useDidUpdateEffect.hooks\";\nimport useWidth from \"../../hooks/useWidth.hooks\";\n\nconst Search = props => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const width = useWidth().width;\n  useDidUpdateEffect(() => {\n    setTimeout(async () => {\n      const data = !!searchQuery.length && (await tmdbQueryApi(1, searchQuery));\n      props.movieSuggestions(data);\n    }, 150);\n  }, [searchQuery]);\n\n  const handleClick = () => {\n    props.search(searchQuery);\n    props.fetchMovies(1);\n    props.showSearchResults(\"search\");\n    setSearchQuery(\"\");\n\n    if (width < 500) {\n      props.setOpen(val => !val);\n    }\n\n    props.history.push(`/search/q=${searchQuery}/page/1`);\n  };\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 13) {\n      handleClick();\n    }\n  };\n\n  const container = {\n    display: \"flex\",\n    alignItems: \"center\"\n  };\n\n  const handleChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onKeyDown: handleKeyDown,\n    style: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: searchQuery,\n    handleOnChange: handleChange,\n    placeholder: \"The world is your oyster...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    search: true,\n    title: \"search\" // disabled={isSending}\n    ,\n    handleClick: e => handleClick(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), props.userSuggestions && /*#__PURE__*/React.createElement(Suggestions, {\n    items: props.userSuggestions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  isSending: state.isSending,\n  // fetchMoves: state.fetchMovies,\n  selectedMovies: state.selectedMovies,\n  userSuggestions: state.movieSuggestions,\n  query: state.search\n});\n\nexport default compose(withRouter, connect(mapStateToProps, {\n  search: search,\n  fetchMovies: page => fetchMovies(page),\n  movieSuggestions: movieSuggestions,\n  showSearchResults: showSearchResults\n}))(Search);","map":{"version":3,"sources":["/home/pinchas/code/projects/movie-finder/src/components/Search/Search.component.jsx"],"names":["React","useState","connect","withRouter","compose","search","fetchMovies","movieSuggestions","showSearchResults","tmdbQueryApi","Suggestions","Button","Input","useDidUpdateEffect","useWidth","Search","props","searchQuery","setSearchQuery","width","setTimeout","data","length","handleClick","setOpen","val","history","push","handleKeyDown","e","keyCode","container","display","alignItems","handleChange","target","value","userSuggestions","mapStateToProps","state","isSending","selectedMovies","query","page"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport {\n  search,\n  fetchMovies,\n  movieSuggestions,\n  showSearchResults,\n} from \"../../redux/actions\";\nimport { tmdbQueryApi } from \"../../apis/tmdbApi\";\nimport Suggestions from \"../Suggestions/Suggestions.component\";\nimport Button from \"../Button/Button\";\nimport Input from \"../Input/Input.component\";\nimport useDidUpdateEffect from \"../../hooks/useDidUpdateEffect.hooks\";\nimport useWidth from \"../../hooks/useWidth.hooks\";\n\nconst Search = (props) => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const width = useWidth().width;\n\n  useDidUpdateEffect(() => {\n    setTimeout(async () => {\n      const data = !!searchQuery.length && (await tmdbQueryApi(1, searchQuery));\n\n      props.movieSuggestions(data);\n    }, 150);\n  }, [searchQuery]);\n\n  const handleClick = () => {\n    props.search(searchQuery);\n    props.fetchMovies(1);\n    props.showSearchResults(\"search\");\n    setSearchQuery(\"\");\n    if (width < 500) {\n      props.setOpen((val) => !val);\n    }\n    props.history.push(`/search/q=${searchQuery}/page/1`);\n  };\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      handleClick();\n    }\n  };\n\n  const container = {\n    display: \"flex\",\n    alignItems: \"center\",\n  };\n  const handleChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  return (\n    <div onKeyDown={handleKeyDown} style={container}>\n      <Input\n        value={searchQuery}\n        handleOnChange={handleChange}\n        placeholder=\"The world is your oyster...\"\n      />\n      <Button\n        search={true}\n        title={\"search\"}\n        // disabled={isSending}\n        handleClick={(e) => handleClick(e)}\n      ></Button>\n\n      {props.userSuggestions && <Suggestions items={props.userSuggestions} />}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isSending: state.isSending,\n  // fetchMoves: state.fetchMovies,\n  selectedMovies: state.selectedMovies,\n  userSuggestions: state.movieSuggestions,\n  query: state.search,\n});\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {\n    search: search,\n    fetchMovies: (page) => fetchMovies(page),\n    movieSuggestions: movieSuggestions,\n    showSearchResults: showSearchResults,\n  })\n)(Search);\n"]},"metadata":{},"sourceType":"module"}