{"ast":null,"code":"var _jsxFileName = \"/home/pinchas/code/projects/movie-finder/src/components/LoadingScreen/LoadingScreen.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport BouncingDvd from \"../spinners/BouncingDvd/BouncingDvd.component\";\nimport Film from \"../spinners/Film/Film.component\";\nimport Spin from \"../spinners/Spin/Spin.component\";\nimport useWidth from \"../../hooks/useWidth.hooks\";\nimport { Container } from \"./LoadingScreen.styles\";\n\nconst LoadingScreen = ({\n  spinner\n}) => {\n  const width = useWidth().width;\n\n  const showOption = () => {\n    switch (spinner) {\n      case \"dvd\":\n        return /*#__PURE__*/React.createElement(BouncingDvd, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 16\n          }\n        });\n\n      case \"camera\":\n        return /*#__PURE__*/React.createElement(Film, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 16\n          }\n        });\n\n      case \"spin\":\n        return /*#__PURE__*/React.createElement(Spin, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 16\n          }\n        });\n\n      default:\n        console.err(\"error\", spinner);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  }, \" \", width < 1000 ? /*#__PURE__*/React.createElement(Film, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 38\n    }\n  }) : showOption());\n};\n\nconst mapStateToProps = state => ({\n  spinner: state.displaySpinner\n});\n\nexport default connect(mapStateToProps, null)(LoadingScreen);","map":{"version":3,"sources":["/home/pinchas/code/projects/movie-finder/src/components/LoadingScreen/LoadingScreen.component.jsx"],"names":["React","connect","BouncingDvd","Film","Spin","useWidth","Container","LoadingScreen","spinner","width","showOption","console","err","mapStateToProps","state","displaySpinner"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,+CAAxB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AACA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACrC,QAAMC,KAAK,GAAGJ,QAAQ,GAAGI,KAAzB;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvB,YAAQF,OAAR;AACE,WAAK,KAAL;AACE,4BAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,QAAL;AACE,4BAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,MAAL;AACE,4BAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF;AACEG,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,OAArB;AARJ;AAUD,GAXD;;AAYA,sBAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAaC,KAAK,GAAG,IAAR,gBAAe,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,GAA0BC,UAAU,EAAjD,CAAP;AACD,CAhBD;;AAiBA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,OAAO,EAAEM,KAAK,CAACC;AADmB,CAAZ,CAAxB;;AAGA,eAAed,OAAO,CAACY,eAAD,EAAkB,IAAlB,CAAP,CAA+BN,aAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport BouncingDvd from \"../spinners/BouncingDvd/BouncingDvd.component\";\nimport Film from \"../spinners/Film/Film.component\";\nimport Spin from \"../spinners/Spin/Spin.component\";\nimport useWidth from \"../../hooks/useWidth.hooks\";\nimport { Container } from \"./LoadingScreen.styles\";\nconst LoadingScreen = ({ spinner }) => {\n  const width = useWidth().width;\n\n  const showOption = () => {\n    switch (spinner) {\n      case \"dvd\":\n        return <BouncingDvd></BouncingDvd>;\n      case \"camera\":\n        return <Film></Film>;\n      case \"spin\":\n        return <Spin></Spin>;\n      default:\n        console.err(\"error\", spinner);\n    }\n  };\n  return <Container> {width < 1000 ? <Film /> : showOption()}</Container>;\n};\nconst mapStateToProps = (state) => ({\n  spinner: state.displaySpinner,\n});\nexport default connect(mapStateToProps, null)(LoadingScreen);\n"]},"metadata":{},"sourceType":"module"}